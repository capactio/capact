# Default values for och.
image:
  name: och-js
  pullPolicy: IfNotPresent

replicaCount: 1

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
   limits:
     cpu: 100m
     memory: 128Mi
   requests:
     cpu: 80m
     memory: 16Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

probe:
  initialDelaySeconds: 60

populator:
  enabled: true
  image:
    name: populator
    pullPolicy: IfNotPresent
  port: 8081
  updateOnGitCommit: true
  manifestsLocation:
    repository: git@github.com:Project-Voltron/go-voltron.git
    # sshKey is a base64 encoded private key used by populator to download manifests. It has read only access
    sshKey: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFZRUFtYUxFMi85eW5Da1pDbWs5VU1tZnhxUUR5WlJHZi91RlZ5Tzg1a2FLKzVOTlVzUWs2RHFaCk5ZOVpuOGg5SkE2dFlnMWtRRTVadmhJUmxqUjViU1FJcmYySnR3bWV4SzMzdDJQTzk2blE3ZUlobkp4RmtvenZaenJxRkIKSkVhWmZZSkdWSDZNRlI4YjMzeWpOZmtxQW5lM0N2UkFsZXBITTErbVZIMFQxOGtSeTJXekRsTVlxRXlyT2JoUG8wdS9DSQpraGVpdkV5OTd5UXJiT0VmcFZGaEZlVG9Cd09hdjdWTUs5M1IzSm9TVFBQVzBncG9keFI3NG9HRHR6eWtCbW1WMHFuazljCkJpMXBxcFJCcUYyaS9ka1U4NUN6N1Azbk1ZaW9xV2pKcUNGUEY3VVZSWDRuNUtJeDRmK1pnZnRhWk04NkFzRmpGRVA3RnUKdXJVdmswdW1PTnU4QzBDeHpobFBTNENLN1NUWVphSmRyaW9Ibm0vL1VWaEIyL1pJVVcyN2VrSWVqRWhMNDBiZ0JScmZBLwplaTBnOHJ3eFVvOEhLbVY5TlVKdi9JYVh1Q3RINk1peUZFeVU3cTEyZ3IveGR1czN5RlJUakFxRERvRTgyV2ZsOGtQSTJsCmY4OTdpbDliZ1A3K0ZsRmFxYk5RK20wazhLWVRyUzk3dkFjbFB1ak5BQUFGaUJoNkQvUVllZy8wQUFBQUIzTnphQzF5YzIKRUFBQUdCQUptaXhOdi9jcHdwR1FwcFBWREpuOGFrQThtVVJuLzdoVmNqdk9aR2l2dVRUVkxFSk9nNm1UV1BXWi9JZlNRTwpyV0lOWkVCT1diNFNFWlkwZVcwa0NLMzlpYmNKbnNTdDk3ZGp6dmVwME8zaUlaeWNSWktNNzJjNjZoUVNSR21YMkNSbFIrCmpCVWZHOTk4b3pYNUtnSjN0d3IwUUpYcVJ6TmZwbFI5RTlmSkVjdGxzdzVUR0toTXF6bTRUNk5MdndpSklYb3J4TXZlOGsKSzJ6aEg2VlJZUlhrNkFjRG1yKzFUQ3ZkMGR5YUVrenoxdElLYUhjVWUrS0JnN2M4cEFacGxkS3A1UFhBWXRhYXFVUWFoZApvdjNaRlBPUXMrejk1ekdJcUtsb3lhZ2hUeGUxRlVWK0orU2lNZUgvbVlIN1dtVFBPZ0xCWXhSRCt4YnJxMUw1TkxwampiCnZBdEFzYzRaVDB1QWl1MGsyR1dpWGE0cUI1NXYvMUZZUWR2MlNGRnR1M3BDSG94SVMrTkc0QVVhM3dQM290SVBLOE1WS1AKQnlwbGZUVkNiL3lHbDdnclIraklzaFJNbE82dGRvSy84WGJyTjhoVVU0d0tndzZCUE5sbjVmSkR5TnBYL1BlNHBmVzREKwovaFpSV3FtelVQcHRKUENtRTYwdmU3d0hKVDdvelFBQUFBTUJBQUVBQUFHQVpQWnVZQlRUQUlTUmpDSDB4VzU2clZPRG1hCmp6VzQreTVMejdtbWlwVlFKTVFpUGNEVERWRmptS01GTFV5aWxMRDdDMVBQMUFSSVFqUW81aGJiUE1jR3E1WWF2VXhuTjgKNHV1WVMzRXhkK0t2Sy9nV1VHU0Z2MVVjRnV5YVFMb2t0R1pLaDA3anh2V01MVGp0aWJIdHdGVWhHSmovdFJweFVvZlVWbApFTjExOERCNUp1Uzh3M3orMlFPaWNqR0k3TmNSUlBRV2M5T2phT3d4SitkV214WDIzNmZRR0ZaSTZEN0IvdGxnYzZGNC8yCmtEbCt4U0tVOXhrZHNnRUwyWnJ3Y2J1elRna0tLbzdRQXhJaWNNbDY1b0lKTnB5ZlNSNWFIeWJ1RkF6RVlKbFluQ3F5UWkKdWpaSVJvQ2psMjNtK1RSOUJJUHhPcXM3SkZZYW4wY0I5ODAvQXpBN0VFS3Y0TW0rVkk0bjdyMFN1T3pwMmJYc1d2aVI2bQpxNkpkOVBTNXB0QVdLWlg1Sm9lTlNDZERIREhOK2dyMnoyV0VXYS9GcTlDSW9kQWE4cWR4cXJha3pvYllkVHp6QjJNK2JLCmxFMFRqWGdsc3JTV0xNL1dPVEc0ODYybUo0L2hockJ3ZEJDb0FUZ1lGbmdxMWVmU3FuQTMrREw2cXA1VEZTZ2JPQkFBQUEKd1FDenNuNVp0cDYwZkNOaTBEaWttamZMdHpFVXNIYW9GbTBuSFcydVN4SXQwUXJ3aWF3cktla0RHeUcxdjVIVEE0RFVBOApDNnpJbnR4NklidmZPZ0loZFZBRFJaZ2tqU0w1T3kydGhuSllneDZLRVdIYmZ5ME1heXlZUmdCN2dYdzFpcVdKY1dZVnQzCndhOGowR0k1WkM2UmJ0YStMSWpJQm5HSkxVbVJ0L0Z4ZDMzKzB5Ym5xS0hITnB2eUpWenRnUlBSM0JYK1grUGhNZE93VFgKbGgzSU9ZM3l6K1NabEdZcWdSaDMybXc3eGNJK2hGaCt4Rk9LaTJHdDdPMGg1bmVwTUFBQURCQU1sNFNNNGdVb1ZxMDhYbgo5N3JxdHhaR1FKUExmVythWHVERkFiNzNCSHVLZmIzOWNma2ZqR3dSWERYMUZGclgyWGRPUVZIdzR6ank2Skk0MWJrNUhNCmUyTkFvYUNkM0RMRXZhQkc0aWlNOVBabGJtdlVmbVBTNGhtQldoVklzdUtDc1JaakZCdk41NzdsWnhUTFBTK0pZSTg0aEsKNVdrczUwTHlyRXc2aUZ1OUJlSXgrRHUycnNmL2xqQ1dHNDBoVHJBckRoNEw1R2ZUa0MvTDY3L25zYldlR2ZFQ0dUQis4aApNNVcwZm9wSlRiSUZTaTFWOGp6NENJRDE2NXd3SUZwUUFBQU1FQXd6Z1lRYzBNSW9nbDJJanMrUEZ2aFluak93QUU2V2RwCllxQnZidE5OWlgwQUVDVkpSSkNkVktvZEFVZXdhU2NnY0Q2RDQ5L2lUVnF1Uk8wY0Y2RThwZFF5MXBkVlBwNXJVSkx0MUYKZndoMTlha2drWkRDSzR3TVEwZndVNGZmbmZGbHJBUFVmVkQ1VkNHSHphUTNjSmdkbVFCWTJLWE9iNlNZRmJmcWdTZFVDSwoxakpWUmF1TWlxaFM4QS9mT29waXR2QlBtQXlvUy9xV0JHTDA5SVVtNkovNEtqSTJpTmhaNm9zdWg4L0dsT3dudlgwUGRGCjRvYUpWTDR3WnYxLzRKQUFBQUVuUmxZVzB0WkdWMlFHTmhjR0ZqZEM1cGJ3PT0KLS0tLS1FTkQgT1BFTlNTSCBQUklWQVRFIEtFWS0tLS0tCg==
    branch: master
  args: ["while true; do /app register ocf-manifests $MANIFESTS_PATH; sleep 600;done"]
