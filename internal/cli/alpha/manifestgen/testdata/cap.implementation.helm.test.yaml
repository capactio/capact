ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: "cap.implementation.helm"
  name: test
  displayName: "test Action"
  description: "test Action"
  documentationURL: https://example.com
  supportURL: https://example.com
  maintainers:
    - email: dev@example.com
      name: Example Dev
      url: https://example.com
  license:
    name: "Apache 2.0"

spec:
  appVersion: "1.0.x" # TODO(ContentDeveloper): Set the supported application version here
  additionalInput:
    parameters:
      additional-parameters:
        typeRef:
          path: "cap.type.helm.test-input"
          revision: 0.1.0

  outputTypeInstanceRelations:
    config:
      uses:
        - helm-release

  implements:
    - path: cap.interface.group.test
      revision: 0.2.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0

  imports:
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.templating.jinja2
      alias: jinja2
      methods:
        - name: template
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.runner.helm
      alias: helm
      methods:
        - name: install
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: deploy
        templates:
          - name: deploy
            inputs:
              artifacts:
                - name: input-parameters
                - name: additional-parameters
                  optional: true
            outputs:
              artifacts: []
            steps:
              - - name: prepare-parameters
                  template: prepare-parameters
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: additional-parameters
                        from: "{{inputs.artifacts.additional-parameters}}"
                        optional: true

              - - name: create-helm-args
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.prepare-parameters.outputs.artifacts.merged}}"
                      - name: configuration
                        raw:
                          data:
                      - name: template
                        raw:
                          data: |
                            generateName: true
                            chart:
                              name: "postgresql"
                              repo: "https://charts.bitnami.com/bitnami"
                              version: "10.9.2"
                            values: # TODO(ContentDeveloper): Adjust the input values to use parameters from the Interface
                              audit:
                                clientMinMessages: <@ additionalinput.audit.clientMinMessages | default("error") @>
                                logConnections: <@ additionalinput.audit.logConnections | default(false) | tojson @>
                                logDisconnections: <@ additionalinput.audit.logDisconnections | default(false) | tojson @>
                                logHostname: <@ additionalinput.audit.logHostname | default(false) | tojson @>
                                logLinePrefix: <@ additionalinput.audit.logLinePrefix | default("") @>
                                logTimezone: <@ additionalinput.audit.logTimezone | default("") @>
                                pgAuditLog: <@ additionalinput.audit.pgAuditLog | default("") @>
                                pgAuditLogCatalog: <@ additionalinput.audit.pgAuditLogCatalog | default("off") @>
                              commonAnnotations: {}
                              configurationConfigMap: <@ additionalinput.configurationConfigMap | default("") @>
                              containerSecurityContext:
                                enabled: <@ additionalinput.containerSecurityContext.enabled | default(true) | tojson @>
                                runAsUser: <@ additionalinput.containerSecurityContext.runAsUser | default(1001) @>
                              customLivenessProbe: {}
                              customReadinessProbe: {}
                              customStartupProbe: {}
                              diagnosticMode:
                                args: <@ additionalinput.diagnosticMode.args | default(["infinity"]) @>
                                command: <@ additionalinput.diagnosticMode.command | default(["sleep"]) @>
                                enabled: <@ additionalinput.diagnosticMode.enabled | default(false) | tojson @>
                              existingSecret: <@ additionalinput.existingSecret | default("") @>
                              extendedConfConfigMap: <@ additionalinput.extendedConfConfigMap | default("") @>
                              extraDeploy: <@ additionalinput.extraDeploy | default(None) | tojson @>
                              extraEnv: <@ additionalinput.extraEnv | default(None) | tojson @>
                              extraEnvVarsCM: <@ additionalinput.extraEnvVarsCM | default("") @>
                              fullnameOverride: <@ additionalinput.fullnameOverride | default("") @>
                              global:
                                imagePullSecrets: <@ additionalinput.global.imagePullSecrets | default(None) | tojson @>
                                imageRegistry: <@ additionalinput.global.imageRegistry | default("") @>
                                postgresql:
                                  existingSecret: <@ additionalinput.global.postgresql.existingSecret | default("") @>
                                  postgresqlDatabase: <@ additionalinput.global.postgresql.postgresqlDatabase | default("") @>
                                  postgresqlPassword: <@ additionalinput.global.postgresql.postgresqlPassword | default("") @>
                                  postgresqlUsername: <@ additionalinput.global.postgresql.postgresqlUsername | default("") @>
                                  replicationPassword: <@ additionalinput.global.postgresql.replicationPassword | default("") @>
                                  servicePort: <@ additionalinput.global.postgresql.servicePort | default("") @>
                                storageClass: <@ additionalinput.global.storageClass | default("") @>
                              image:
                                debug: <@ additionalinput.image.debug | default(false) | tojson @>
                                pullPolicy: <@ additionalinput.image.pullPolicy | default("IfNotPresent") @>
                                pullSecrets: <@ additionalinput.image.pullSecrets | default(None) | tojson @>
                                registry: <@ additionalinput.image.registry | default("docker.io") @>
                                repository: <@ additionalinput.image.repository | default("bitnami/postgresql") @>
                                tag: <@ additionalinput.image.tag | default("11.13.0-debian-10-r0") @>
                              initdbPassword: <@ additionalinput.initdbPassword | default("") @>
                              initdbScripts: {}
                              initdbScriptsConfigMap: <@ additionalinput.initdbScriptsConfigMap | default("") @>
                              initdbScriptsSecret: <@ additionalinput.initdbScriptsSecret | default("") @>
                              initdbUser: <@ additionalinput.initdbUser | default("") @>
                              ldap:
                                baseDN: <@ additionalinput.ldap.baseDN | default("") @>
                                bind_password: <@ additionalinput.ldap.bind_password | default("") @>
                                bindDN: <@ additionalinput.ldap.bindDN | default("") @>
                                enabled: <@ additionalinput.ldap.enabled | default(false) | tojson @>
                                port: <@ additionalinput.ldap.port | default("") @>
                                prefix: <@ additionalinput.ldap.prefix | default("") @>
                                scheme: <@ additionalinput.ldap.scheme | default("") @>
                                search_attr: <@ additionalinput.ldap.search_attr | default("") @>
                                search_filter: <@ additionalinput.ldap.search_filter | default("") @>
                                server: <@ additionalinput.ldap.server | default("") @>
                                suffix: <@ additionalinput.ldap.suffix | default("") @>
                                tls: <@ additionalinput.ldap.tls | default("") @>
                                url: <@ additionalinput.ldap.url | default("") @>
                              lifecycleHooks: {}
                              livenessProbe:
                                enabled: <@ additionalinput.livenessProbe.enabled | default(true) | tojson @>
                                failureThreshold: <@ additionalinput.livenessProbe.failureThreshold | default(6) @>
                                initialDelaySeconds: <@ additionalinput.livenessProbe.initialDelaySeconds | default(30) @>
                                periodSeconds: <@ additionalinput.livenessProbe.periodSeconds | default(10) @>
                                successThreshold: <@ additionalinput.livenessProbe.successThreshold | default(1) @>
                                timeoutSeconds: <@ additionalinput.livenessProbe.timeoutSeconds | default(5) @>
                              metrics:
                                customMetrics: {}
                                enabled: <@ additionalinput.metrics.enabled | default(false) | tojson @>
                                extraEnvVars: <@ additionalinput.metrics.extraEnvVars | default(None) | tojson @>
                                image:
                                  pullPolicy: <@ additionalinput.metrics.image.pullPolicy | default("IfNotPresent") @>
                                  pullSecrets: <@ additionalinput.metrics.image.pullSecrets | default(None) | tojson @>
                                  registry: <@ additionalinput.metrics.image.registry | default("docker.io") @>
                                  repository: <@ additionalinput.metrics.image.repository | default("bitnami/postgres-exporter") @>
                                  tag: <@ additionalinput.metrics.image.tag | default("0.10.0-debian-10-r27") @>
                                livenessProbe:
                                  enabled: <@ additionalinput.metrics.livenessProbe.enabled | default(true) | tojson @>
                                  failureThreshold: <@ additionalinput.metrics.livenessProbe.failureThreshold | default(6) @>
                                  initialDelaySeconds: <@ additionalinput.metrics.livenessProbe.initialDelaySeconds | default(5) @>
                                  periodSeconds: <@ additionalinput.metrics.livenessProbe.periodSeconds | default(10) @>
                                  successThreshold: <@ additionalinput.metrics.livenessProbe.successThreshold | default(1) @>
                                  timeoutSeconds: <@ additionalinput.metrics.livenessProbe.timeoutSeconds | default(5) @>
                                prometheusRule:
                                  additionalLabels: {}
                                  enabled: <@ additionalinput.metrics.prometheusRule.enabled | default(false) | tojson @>
                                  namespace: <@ additionalinput.metrics.prometheusRule.namespace | default("") @>
                                  rules: <@ additionalinput.metrics.prometheusRule.rules | default(None) | tojson @>
                                readinessProbe:
                                  enabled: <@ additionalinput.metrics.readinessProbe.enabled | default(true) | tojson @>
                                  failureThreshold: <@ additionalinput.metrics.readinessProbe.failureThreshold | default(6) @>
                                  initialDelaySeconds: <@ additionalinput.metrics.readinessProbe.initialDelaySeconds | default(5) @>
                                  periodSeconds: <@ additionalinput.metrics.readinessProbe.periodSeconds | default(10) @>
                                  successThreshold: <@ additionalinput.metrics.readinessProbe.successThreshold | default(1) @>
                                  timeoutSeconds: <@ additionalinput.metrics.readinessProbe.timeoutSeconds | default(5) @>
                                resources: {}
                                securityContext:
                                  enabled: <@ additionalinput.metrics.securityContext.enabled | default(false) | tojson @>
                                  runAsUser: <@ additionalinput.metrics.securityContext.runAsUser | default(1001) @>
                                service:
                                  annotations:
                                    prometheus.io/port: <@ additionalinput.metrics.service.annotations["prometheus.io/port"] | default("9187") @>
                                    prometheus.io/scrape: <@ additionalinput.metrics.service.annotations["prometheus.io/scrape"] | default("true") @>
                                  loadBalancerIP: <@ additionalinput.metrics.service.loadBalancerIP | default("") @>
                                  type: <@ additionalinput.metrics.service.type | default("ClusterIP") @>
                                serviceMonitor:
                                  additionalLabels: {}
                                  enabled: <@ additionalinput.metrics.serviceMonitor.enabled | default(false) | tojson @>
                                  interval: <@ additionalinput.metrics.serviceMonitor.interval | default("") @>
                                  metricRelabelings: <@ additionalinput.metrics.serviceMonitor.metricRelabelings | default(None) | tojson @>
                                  namespace: <@ additionalinput.metrics.serviceMonitor.namespace | default("") @>
                                  relabelings: <@ additionalinput.metrics.serviceMonitor.relabelings | default(None) | tojson @>
                                  scrapeTimeout: <@ additionalinput.metrics.serviceMonitor.scrapeTimeout | default("") @>
                              nameOverride: <@ additionalinput.nameOverride | default("") @>
                              networkPolicy:
                                allowExternal: <@ additionalinput.networkPolicy.allowExternal | default(true) | tojson @>
                                enabled: <@ additionalinput.networkPolicy.enabled | default(false) | tojson @>
                                explicitNamespacesSelector: {}
                              persistence:
                                accessModes: <@ additionalinput.persistence.accessModes | default(["ReadWriteOnce"]) @>
                                annotations: {}
                                enabled: <@ additionalinput.persistence.enabled | default(true) | tojson @>
                                existingClaim: <@ additionalinput.persistence.existingClaim | default("") @>
                                mountPath: <@ additionalinput.persistence.mountPath | default("/bitnami/postgresql") @>
                                selector: {}
                                size: <@ additionalinput.persistence.size | default("8Gi") @>
                                storageClass: <@ additionalinput.persistence.storageClass | default("") @>
                                subPath: <@ additionalinput.persistence.subPath | default("") @>
                              pgHbaConfiguration: <@ additionalinput.pgHbaConfiguration | default("") @>
                              postgresqlConfiguration: {}
                              postgresqlDataDir: <@ additionalinput.postgresqlDataDir | default("/bitnami/postgresql/data") @>
                              postgresqlDatabase: <@ additionalinput.postgresqlDatabase | default("") @>
                              postgresqlDbUserConnectionLimit: <@ additionalinput.postgresqlDbUserConnectionLimit | default("") @>
                              postgresqlExtendedConf: {}
                              postgresqlInitdbArgs: <@ additionalinput.postgresqlInitdbArgs | default("") @>
                              postgresqlInitdbWalDir: <@ additionalinput.postgresqlInitdbWalDir | default("") @>
                              postgresqlMaxConnections: <@ additionalinput.postgresqlMaxConnections | default("") @>
                              postgresqlPassword: <@ additionalinput.postgresqlPassword | default("") @>
                              postgresqlPghbaRemoveFilters: <@ additionalinput.postgresqlPghbaRemoveFilters | default("") @>
                              postgresqlPostgresConnectionLimit: <@ additionalinput.postgresqlPostgresConnectionLimit | default("") @>
                              postgresqlPostgresPassword: <@ additionalinput.postgresqlPostgresPassword | default("") @>
                              postgresqlSharedPreloadLibraries: <@ additionalinput.postgresqlSharedPreloadLibraries | default("pgaudit") @>
                              postgresqlStatementTimeout: <@ additionalinput.postgresqlStatementTimeout | default("") @>
                              postgresqlTcpKeepalivesCount: <@ additionalinput.postgresqlTcpKeepalivesCount | default("") @>
                              postgresqlTcpKeepalivesIdle: <@ additionalinput.postgresqlTcpKeepalivesIdle | default("") @>
                              postgresqlTcpKeepalivesInterval: <@ additionalinput.postgresqlTcpKeepalivesInterval | default("") @>
                              postgresqlUsername: <@ additionalinput.postgresqlUsername | default("postgres") @>
                              primary:
                                affinity: {}
                                annotations: {}
                                extraInitContainers: <@ additionalinput.primary.extraInitContainers | default(None) | tojson @>
                                extraVolumeMounts: <@ additionalinput.primary.extraVolumeMounts | default(None) | tojson @>
                                extraVolumes: <@ additionalinput.primary.extraVolumes | default(None) | tojson @>
                                labels: {}
                                nodeAffinityPreset:
                                  key: <@ additionalinput.primary.nodeAffinityPreset.key | default("") @>
                                  type: <@ additionalinput.primary.nodeAffinityPreset.type | default("") @>
                                  values: <@ additionalinput.primary.nodeAffinityPreset.values | default(None) | tojson @>
                                nodeSelector: {}
                                podAffinityPreset: <@ additionalinput.primary.podAffinityPreset | default("") @>
                                podAnnotations: {}
                                podAntiAffinityPreset: <@ additionalinput.primary.podAntiAffinityPreset | default("soft") @>
                                podLabels: {}
                                priorityClassName: <@ additionalinput.primary.priorityClassName | default("") @>
                                service:
                                  clusterIP: <@ additionalinput.primary.service.clusterIP | default("") @>
                                  nodePort: <@ additionalinput.primary.service.nodePort | default("") @>
                                  type: <@ additionalinput.primary.service.type | default("") @>
                                sidecars: <@ additionalinput.primary.sidecars | default(None) | tojson @>
                                tolerations: <@ additionalinput.primary.tolerations | default(None) | tojson @>
                              primaryAsStandBy:
                                enabled: <@ additionalinput.primaryAsStandBy.enabled | default(false) | tojson @>
                                primaryHost: <@ additionalinput.primaryAsStandBy.primaryHost | default("") @>
                                primaryPort: <@ additionalinput.primaryAsStandBy.primaryPort | default("") @>
                              psp:
                                create: <@ additionalinput.psp.create | default(false) | tojson @>
                              rbac:
                                create: <@ additionalinput.rbac.create | default(false) | tojson @>
                              readReplicas:
                                affinity: {}
                                annotations: {}
                                extraInitContainers: <@ additionalinput.readReplicas.extraInitContainers | default(None) | tojson @>
                                extraVolumeMounts: <@ additionalinput.readReplicas.extraVolumeMounts | default(None) | tojson @>
                                extraVolumes: <@ additionalinput.readReplicas.extraVolumes | default(None) | tojson @>
                                labels: {}
                                nodeAffinityPreset:
                                  key: <@ additionalinput.readReplicas.nodeAffinityPreset.key | default("") @>
                                  type: <@ additionalinput.readReplicas.nodeAffinityPreset.type | default("") @>
                                  values: <@ additionalinput.readReplicas.nodeAffinityPreset.values | default(None) | tojson @>
                                nodeSelector: {}
                                persistence:
                                  enabled: <@ additionalinput.readReplicas.persistence.enabled | default(true) | tojson @>
                                podAffinityPreset: <@ additionalinput.readReplicas.podAffinityPreset | default("") @>
                                podAnnotations: {}
                                podAntiAffinityPreset: <@ additionalinput.readReplicas.podAntiAffinityPreset | default("soft") @>
                                podLabels: {}
                                priorityClassName: <@ additionalinput.readReplicas.priorityClassName | default("") @>
                                resources: {}
                                service:
                                  clusterIP: <@ additionalinput.readReplicas.service.clusterIP | default("") @>
                                  nodePort: <@ additionalinput.readReplicas.service.nodePort | default("") @>
                                  type: <@ additionalinput.readReplicas.service.type | default("") @>
                                sidecars: <@ additionalinput.readReplicas.sidecars | default(None) | tojson @>
                                tolerations: <@ additionalinput.readReplicas.tolerations | default(None) | tojson @>
                              readinessProbe:
                                enabled: <@ additionalinput.readinessProbe.enabled | default(true) | tojson @>
                                failureThreshold: <@ additionalinput.readinessProbe.failureThreshold | default(6) @>
                                initialDelaySeconds: <@ additionalinput.readinessProbe.initialDelaySeconds | default(5) @>
                                periodSeconds: <@ additionalinput.readinessProbe.periodSeconds | default(10) @>
                                successThreshold: <@ additionalinput.readinessProbe.successThreshold | default(1) @>
                                timeoutSeconds: <@ additionalinput.readinessProbe.timeoutSeconds | default(5) @>
                              replication:
                                applicationName: <@ additionalinput.replication.applicationName | default("my_application") @>
                                enabled: <@ additionalinput.replication.enabled | default(false) | tojson @>
                                numSynchronousReplicas: <@ additionalinput.replication.numSynchronousReplicas | default(0) @>
                                password: <@ additionalinput.replication.password | default("repl_password") @>
                                readReplicas: <@ additionalinput.replication.readReplicas | default(1) @>
                                singleService: <@ additionalinput.replication.singleService | default(true) | tojson @>
                                synchronousCommit: <@ additionalinput.replication.synchronousCommit | default("off") @>
                                uniqueServices: <@ additionalinput.replication.uniqueServices | default(false) | tojson @>
                                user: <@ additionalinput.replication.user | default("repl_user") @>
                              resources:
                                requests:
                                  cpu: <@ additionalinput.resources.requests.cpu | default("250m") @>
                                  memory: <@ additionalinput.resources.requests.memory | default("256Mi") @>
                              schedulerName: <@ additionalinput.schedulerName | default("") @>
                              securityContext:
                                enabled: <@ additionalinput.securityContext.enabled | default(true) | tojson @>
                                fsGroup: <@ additionalinput.securityContext.fsGroup | default(1001) @>
                              service:
                                annotations: {}
                                clusterIP: <@ additionalinput.service.clusterIP | default("") @>
                                loadBalancerIP: <@ additionalinput.service.loadBalancerIP | default("") @>
                                loadBalancerSourceRanges: <@ additionalinput.service.loadBalancerSourceRanges | default(None) | tojson @>
                                nodePort: <@ additionalinput.service.nodePort | default("") @>
                                port: <@ additionalinput.service.port | default(5432) @>
                                type: <@ additionalinput.service.type | default("ClusterIP") @>
                              serviceAccount:
                                autoMount: <@ additionalinput.serviceAccount.autoMount | default(false) | tojson @>
                                enabled: <@ additionalinput.serviceAccount.enabled | default(false) | tojson @>
                                name: <@ additionalinput.serviceAccount.name | default("") @>
                              shmVolume:
                                chmod:
                                  enabled: <@ additionalinput.shmVolume.chmod.enabled | default(true) | tojson @>
                                enabled: <@ additionalinput.shmVolume.enabled | default(true) | tojson @>
                                sizeLimit: <@ additionalinput.shmVolume.sizeLimit | default("") @>
                              startupProbe:
                                enabled: <@ additionalinput.startupProbe.enabled | default(false) | tojson @>
                                failureThreshold: <@ additionalinput.startupProbe.failureThreshold | default(10) @>
                                initialDelaySeconds: <@ additionalinput.startupProbe.initialDelaySeconds | default(30) @>
                                periodSeconds: <@ additionalinput.startupProbe.periodSeconds | default(15) @>
                                successThreshold: <@ additionalinput.startupProbe.successThreshold | default(1) @>
                                timeoutSeconds: <@ additionalinput.startupProbe.timeoutSeconds | default(5) @>
                              terminationGracePeriodSeconds: <@ additionalinput.terminationGracePeriodSeconds | default("") @>
                              tls:
                                autoGenerated: <@ additionalinput.tls.autoGenerated | default(false) | tojson @>
                                certCAFilename: <@ additionalinput.tls.certCAFilename | default("") @>
                                certFilename: <@ additionalinput.tls.certFilename | default("") @>
                                certKeyFilename: <@ additionalinput.tls.certKeyFilename | default("") @>
                                certificatesSecret: <@ additionalinput.tls.certificatesSecret | default("") @>
                                crlFilename: <@ additionalinput.tls.crlFilename | default("") @>
                                enabled: <@ additionalinput.tls.enabled | default(false) | tojson @>
                                preferServerCiphers: <@ additionalinput.tls.preferServerCiphers | default(true) | tojson @>
                              updateStrategy:
                                type: <@ additionalinput.updateStrategy.type | default("RollingUpdate") @>
                              usePasswordFile: <@ additionalinput.usePasswordFile | default(false) | tojson @>
                              volumePermissions:
                                enabled: <@ additionalinput.volumePermissions.enabled | default(false) | tojson @>
                                image:
                                  pullPolicy: <@ additionalinput.volumePermissions.image.pullPolicy | default("Always") @>
                                  pullSecrets: <@ additionalinput.volumePermissions.image.pullSecrets | default(None) | tojson @>
                                  registry: <@ additionalinput.volumePermissions.image.registry | default("docker.io") @>
                                  repository: <@ additionalinput.volumePermissions.image.repository | default("bitnami/bitnami-shell") @>
                                  tag: <@ additionalinput.volumePermissions.image.tag | default("10-debian-10-r159") @>
                                securityContext:
                                  runAsUser: <@ additionalinput.volumePermissions.securityContext.runAsUser | default(0) @>
                              
                            output:
                              goTemplate: |
                                # TODO(ContentDeveloper): Add output template in YAML

              - - name: helm-install
                  capact-action: helm.install
                  capact-outputTypeInstances:
                    - name: helm-release
                      from: helm-release
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.create-helm-args.outputs.artifacts.render}}"
                      - name: runner-context
                        from: "{{workflow.outputs.artifacts.runner-context}}"

              - - name: render-config
                  capact-outputTypeInstances:
                    - name: config
                      from: render
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.helm-install.outputs.artifacts.additional}}"
                      - name: configuration
                        raw:
                          data: ""
                      - name: template
                        raw:
                          # TODO(ContentDeveloper): Fill the properties of the output TypeInstance here
                          data: |
                            property: value

          - name: prepare-parameters
            inputs:
              artifacts:
                - name: input-parameters
                  path: /yamls/input.yaml
                - name: additional-parameters
                  path: /yamls/additionalinput.yaml
                  optional: true
            container:
              image: ghcr.io/capactio/pr/infra/merger:PR-428
            outputs:
              artifacts:
              - name: merged
                path: /merged.yaml
