ocfVersion: 0.0.1
revision: {{ .Revision }}
kind: Implementation
metadata:
  prefix: "cap.implementation.{{ .Prefix }}"
  name: {{ .Name }}
  displayName: "{{ .Name }} Action"
  description: "{{ .Name }} Action"
  documentationURL: https://example.com
  supportURL: https://example.com
  maintainers:
    - email: dev@example.com
      name: Example Dev
      url: https://example.com
  license:
    name: "Apache 2.0"

spec:
  appVersion: "1.0.x" # TODO(ContentDeveloper): Set the supported application version here
  additionalInput:
    parameters:
      additional-parameters:
        typeRef:
          path: "cap.type.{{ .Prefix }}.{{ .Name }}-input"
          revision: 0.1.0

  outputTypeInstanceRelations:
    config:
      uses:
        - terraform-release

  implements:
    - path: {{if .InterfacePath}}{{ .InterfacePath }}{{else}}"cap.interface..." # TODO(ContentDeveloper): Put here the path of the implemented Interface{{end}}
      revision: {{if .InterfaceRevision}}{{ .InterfaceRevision }}{{else}}0.1.0{{end}}

  requires: {{if eq .Provider "aws"}}
    cap.type.aws.auth:
      allOf:
        - name: credentials
          alias: aws-credentials
          revision: 0.1.0{{else if eq .Provider "gcp"}}
    cap.type.gcp.auth:
      allOf:
        - name: service-account
          alias: gcp-sa
          revision: 0.1.0{{else}}{}{{end}}

  imports:
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.templating.jinja2
      alias: jinja2
      methods:
        - name: template
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.runner.terraform
      alias: terraform
      methods:
        - name: apply
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: deploy
        templates:
          - name: deploy
            inputs:
              artifacts:
                - name: input-parameters
                - name: additional-parameters
                  optional: true
            outputs:
              artifacts: []
            steps:
              {{ if eq .Provider "gcp" }}
              - - name: convert-gcp-yaml-to-json
                  template: convert-yaml-to-json
                  arguments:
                    artifacts:
                      - name: in
                        from: "{{`{{workflow.outputs.artifacts.gcp-sa}}`}}"
              {{ end }}

              - - name: prepare-parameters
                  template: prepare-parameters
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{`{{inputs.artifacts.input-parameters}}`}}"
                      - name: additional-parameters
                        from: "{{`{{inputs.artifacts.additional-parameters}}`}}"
                        optional: true
                      - name: provider-credentials
                        {{if eq .Provider "aws" -}}
                        from: "{{`{{workflow.outputs.artifacts.aws-credentials}}`}}"
                        {{- else if eq .Provider "gcp" -}}
                        from: "{{`{{steps.convert-gcp-yaml-to-json.outputs.artifacts.out}}`}}"
                        {{- else -}}
                        from: "" # TODO(ContentDeveloper): Set credentials to the Terraform provider
                        {{- end}}

              - - name: create-module-args
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{`{{steps.prepare-parameters.outputs.artifacts.merged}}`}}"
                      - name: configuration
                        raw:
                          data:
                      - name: template
                        raw:
                          data: |
                            command: "apply"
                            module:
                              name: "{{ .Name }}"
                              source: "{{ .ModuleSourceURL }}"
                            env: {{if eq .Provider "aws"}}
                              - AWS_ACCESS_KEY_ID=<@ providercredentials.accessKeyID @>
                              - AWS_SECRET_ACCESS_KEY=<@ providercredentials.secretAccessKey @>{{else if eq .Provider "gcp"}}
                              - GOOGLE_PROJECT=<@ providercredentials.project_id @>
                              - GOOGLE_APPLICATION_CREDENTIALS=/additional{{else}}[]{{end}}
                            output:
                              goTemplate:
                                {{ range $index, $output := .Outputs -}}
                                {{ $output.Name }}: "{{`{{`}} .{{ $output.Name }} {{`}}`}}"
                                {{ end }}
                            variables: |+
                              {{ range $index, $variable := .Variables -}}
                              <%- if additionalinput.{{ $variable.Name }} -%>
                              {{ $variable.Name }} = <@ additionalinput.{{ $variable.Name }} @>
                              <%- endif -%>
                              {{ end }}

              - - name: terraform-apply
                  capact-action: terraform.apply
                  capact-outputTypeInstances:
                    - name: terraform-release
                      from: terraform-release
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{`{{steps.create-module-args.outputs.artifacts.render}}`}}"
                      - name: runner-context
                        from: "{{`{{workflow.outputs.artifacts.runner-context}}`}}"
                        {{- if eq .Provider "gcp"}}
                      - name: additional
                        from: "{{`{{steps.convert-gcp-yaml-to-json.outputs.artifacts.out}}`}}"
                        {{- end}}

              - - name: render-config
                  capact-outputTypeInstances:
                    - name: config
                      from: render
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{`{{steps.terraform-apply.outputs.artifacts.additional}}`}}"
                      - name: configuration
                        raw:
                          data: ""
                      - name: template
                        raw:
                          # TODO(ContentDeveloper): Fill the properties of the output TypeInstance here
                          data: |
                            property: value

          {{ if eq .Provider "gcp" }}
          - name: convert-yaml-to-json
            inputs:
              artifacts:
                - name: in
                  path: /file
            container:
              image: ghcr.io/capactio/yq:4 # Original image: mikefarah/yq:4
              command: ["sh", "-c"]
              args: ["sleep 1 && yq eval -j -i /file"]
            outputs:
              artifacts:
                - name: out
                  path: /file
          {{ end -}}

          - name: prepare-parameters
            inputs:
              artifacts:
                - name: input-parameters
                  path: /yamls/input.yaml
                - name: additional-parameters
                  path: /yamls/additionalinput.yaml
                  optional: true
                - name: provider-credentials
                  path: /yamls/providercredentials.yaml
            container:
              image: ghcr.io/capactio/pr/infra/merger:PR-428
            outputs:
              artifacts:
              - name: merged
                path: /merged.yaml
