apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: cap-interface-database-postgresql-install
spec:
  arguments:
    artifacts:
    - name: input-parameters
      raw:
        data: |
          {}
  entrypoint: postgres-install
  templates:
  - inputs:
      artifacts:
      - name: input-parameters
    name: postgres-install
    outputs: {}
    steps:
    - - arguments: {}
        name: inject-postgresql-step
        template: inject-postgresql
    - - arguments:
          artifacts:
          - from: '{{inputs.artifacts.input-parameters}}'
            name: input-parameters
          - name: template
            raw:
              data: |
                context:
                  name: "helm-runner-example"
                  dryRun: false
                  timeout: "10m"
                  platform:
                    namespace: "default"
                    serviceAccountName: "helm-runner-example"
                args:
                  command: "install"
                  generateName: true
                  chart:
                    name: "postgresql"
                    repo: "https://charts.bitnami.com/bitnami"
                  values:
                    image:
                      pullPolicy: Always
                    postgresqlDatabase: {{ defaultDBName }}
                    postgresqlUsername: {{ superuser.username }}
                    postgresqlPassword: {{ superuser.password }}
                  output:{% raw %}
                    directory: "/"
                    helmRelease:
                      fileName: "helm-release"
                    additional:
                      fileName: "additional"
                      value: |-
                        host: "{{ template "common.names.fullname" . }}"
                        port: "{{ template "postgresql.port" . }}"
                        defaultDBName: "{{ template "postgresql.database" . }}"
                        superuser:
                          username: "{{ template "postgresql.username" . }}"
                          password: "{{ template "postgresql.password" . }}"{% endraw %}
        name: create-helm-args
        template: postgres-install-create-helm-args-template
    - - arguments:
          artifacts:
          - from: '{{steps.create-helm-args.outputs.artifacts.render}}'
            name: input-parameters
        name: helm-run
        template: postgres-install-helm-run-helm
    - - arguments:
          artifacts:
          - from: '{{steps.helm-run.outputs.artifacts.additional}}'
            name: postgresql
        name: output-postgresql
        template: output-postgresql
  - container:
      args:
      - sleep 1
      command:
      - sh
      - -c
      image: alpine:3.7
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: postgresql
        path: /typeinstance
    name: output-postgresql
    outputs:
      artifacts:
      - globalName: postgresql
        name: postgresql
        path: /typeinstance
  - container:
      args:
      - |-
        sleep 2 && echo 'defaultDBName: jira
        host: postgresql-1608289689
        port: 5432
        superuser:
          password: okon
          username: jira
        ' | tee /output
      command:
      - sh
      - -c
      image: alpine:3.7
      name: ""
      resources: {}
    inputs: {}
    name: inject-postgresql
    outputs:
      artifacts:
      - globalName: postgresql
        name: postgresql
        path: /output
  - container:
      args:
      - /template.yml
      - /values.yml
      - --format=yaml
      - -o
      - /render.yml
      image: dinutac/jinja2docker
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: template
        path: /template.yml
      - name: input-parameters
        path: /values.yml
    name: postgres-install-create-helm-args-template
    outputs:
      artifacts:
      - name: render
        path: /render.yml
  - container:
      env:
      - name: RUNNER_INPUT_PATH
        value: '{{inputs.artifacts.input-parameters.path}}'
      image: gcr.io/projectvoltron/helm-runner:de65286
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: input-parameters
        path: /helm-args
    name: postgres-install-helm-run-helm
    outputs:
      artifacts:
      - globalName: helm-release
        name: helm-release
        path: /helm-release
      - globalName: additional
        name: additional
        path: /additional

