apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: cap-implementation-atlassian-jira-install
spec:
  arguments:
    artifacts:
    - name: input-parameters
      raw:
        data: |
          defaultDBName: test
          superuser:
            password: s3cr3t
            username: postgres
  entrypoint: jira-install
  templates:
  - inputs:
      artifacts:
      - name: input-parameters
    name: jira-install
    outputs: {}
    steps:
    - - arguments:
          artifacts:
          - name: input-parameters
            raw:
              data: |
                superuser:
                  username: jira
                  password: okon
                defaultDBName: jira
        name: install-db
        template: jira-install-postgres-install
    - - arguments:
          artifacts:
          - name: template
            raw:
              data: |
                context:
                  name: "helm-runner-example"
                  dryRun: false
                  timeout: "10m"
                  platform:
                    namespace: "default"
                    serviceAccountName: "helm-runner-example"
                args:
                  command: "install"
                  generateName: true
                  chart:
                    name: "jira-software"
                    repo: "https://helm.mox.sh"
                  output:{% raw %}
                    directory: "/"
                    helmRelease:
                      fileName: "helm-release"
                    additional:
                      fileName: "additional"
                      value: |-
                        version: "{{ .Values.image.tag }}"
                        host: "{{ template "jira-software.fullname" . }}"{% endraw %}
                  values:
                    postgresql:
                      enabled: false
                    databaseConnection:
                      host: "{{ host }}"
                      user: "{{ superuser.username }}"
                      password: "{{ superuser.password }}"
                      database: "{{ defaultDBName }}"
                    ingress:
                      enabled: true
                      hosts:
                      - host: jira-cloud.voltron.local
                        paths: ['/']
          - from: '{{workflow.outputs.artifacts.jira-install-postgresql}}'
            name: input-parameters
        name: jira-input-converter
        template: jira-install-template
    - - arguments:
          artifacts:
          - from: '{{steps.jira-input-converter.outputs.artifacts.render}}'
            name: input-parameters
        name: install-jira
        template: jira-install-helm
  - container:
      args:
      - sleep 2 && cat /file
      command:
      - sh
      - -c
      image: alpine:3.7
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: file
        path: /file
    name: cat-file
    outputs: {}
  - inputs:
      artifacts:
      - name: input-parameters
    name: jira-install-postgres-install
    outputs: {}
    steps:
    - - arguments:
          artifacts:
          - from: '{{inputs.artifacts.input-parameters}}'
            name: input-parameters
          - name: template
            raw:
              data: |
                context:
                  name: "helm-runner-example"
                  dryRun: false
                  timeout: "10m"
                  platform:
                    namespace: "default"
                    serviceAccountName: "helm-runner-example"
                args:
                  command: "install"
                  generateName: true
                  chart:
                    name: "postgresql"
                    repo: "https://charts.bitnami.com/bitnami"
                  values:
                    image:
                      pullPolicy: Always
                    postgresqlDatabase: {{ defaultDBName }}
                    postgresqlPassword: {{ superuser.password }}
                  output:{% raw %}
                    directory: "/"
                    helmRelease:
                      fileName: "helm-release"
                    additional:
                      fileName: "additional"
                      value: |-
                        host: "{{ template "postgresql.primary.fullname" . }}"
                        port: "{{ template "postgresql.port" . }}"
                        defaultDBName: "{{ template "postgresql.database" . }}"
                        superuser:
                          username: "{{ template "postgresql.username" . }}"
                          password: "{{ template "postgresql.password" . }}"{% endraw %}
        name: jira-install-create-install-config
        template: jira-install-postgres-install-template
    - - arguments:
          artifacts:
          - from: '{{steps.create-install-config.outputs.artifacts.render}}'
            name: input-parameters
        name: jira-install-postgres-install
        template: jira-install-postgres-install-helm
    - - arguments:
          artifacts:
          - from: '{{steps.postgres-install.outputs.artifacts.additional}}'
            name: postgresql
        name: jira-install-set-type-instance
        template: set-type-instance
  - container:
      args:
      - sleep 2
      command:
      - sh
      - -c
      image: alpine:3.7
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: postgresql
        path: /type-instance
    name: jira-install-set-type-instance
    outputs:
      artifacts:
      - globalName: jira-install-postgresql
        name: postgresql
        path: /type-instance
  - container:
      args:
      - /template.yml
      - /values.yml
      - --format=yaml
      - -o
      - /render.yml
      image: dinutac/jinja2docker
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: template
        path: /template.yml
      - name: input-parameters
        path: /values.yml
    name: jira-install-template
    outputs:
      artifacts:
      - name: render
        path: /render.yml
  - container:
      env:
      - name: RUNNER_INPUT_PATH
        value: '{{inputs.artifacts.input-parameters.path}}'
      image: gcr.io/projectvoltron/helm-runner:de65286
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: input-parameters
        path: /helm-args
    name: jira-install-helm
    outputs:
      artifacts:
      - globalName: jira-install-helm-release
        name: helm-release
        path: /helm-release
      - name: additional
        path: /additional
  - container:
      args:
      - /template.yml
      - /values.yml
      - --format=yaml
      - -o
      - /render.yml
      image: dinutac/jinja2docker
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: template
        path: /template.yml
      - name: input-parameters
        path: /values.yml
    name: jira-install-postgres-install-template
    outputs:
      artifacts:
      - name: render
        path: /render.yml
  - container:
      env:
      - name: RUNNER_INPUT_PATH
        value: '{{inputs.artifacts.input-parameters.path}}'
      image: gcr.io/projectvoltron/helm-runner:de65286
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: input-parameters
        path: /helm-args
    name: jira-install-postgres-install-helm
    outputs:
      artifacts:
      - globalName: jira-install-postgres-install-helm-release
        name: helm-release
        path: /helm-release
      - name: additional
        path: /additional

