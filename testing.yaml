# TODO: Remove the file
apiVersion: v1
kind: ServiceAccount
metadata:
  name: helm-runner-example
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: helm-runner-example
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: helm-runner-example
subjects:
  - kind: ServiceAccount
    name: helm-runner-example
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: helm-runner-example
rules:
  - apiGroups:
      - ""
      - "apps"
    resources:
      - "*"
    verbs:
      - "get"
      - "list"
      - "create"
      - "update"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: helm-runner-example
data:
  input.yaml: |
    context:
      name: "helm-runner-example"
      dryRun: true
      timeout: "10m"
      platform:
        namespace: "default"
        serviceAccountName: "helm-runner-example"
    args:
      command: "install"
      generateName: true
      chart:
        name: "postgresql"
        repo: "https://charts.bitnami.com/bitnami"
      values:
        image:
          pullPolicy: Always
        postgresqlDatabase: defaultdb
        postgresqlPassword: okon
      output:
        directory: "/out"
        default:
          fileName: "release.yaml"
        additional:
          fileName: "additional.yaml"
          value: |-
            host: "{{ template "postgresql.fullname" . }}"
            port: "{{ template "postgresql.port" . }}"
            defaultDBName: "{{ template "postgresql.database" . }}"
            superuser:
              username: "{{ template "postgresql.username" . }}"
              password: "{{ template "postgresql.password" . }}"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: helm-runner-example
spec:
  template:
    metadata:
        labels:
          helm-runner-example: "true"
    spec:
      serviceAccountName: helm-runner-example
      containers:
        - name: runner
          imagePullPolicy: Never
          image: gcr.io/projectvoltron/helm-runner:latest
          env:
            - name: RUNNER_INPUT_PATH
              value: "/mnt/input.yaml"
            - name: RUNNER_OUTPUT_DIR
              value: "/out/"
            - name: RUNNER_LOGGER_DEV_MODE
              value: "true"
          volumeMounts:
            - name: config-volume
              mountPath: /mnt/
            - name: output-volume
              mountPath: /out/
        - name: printer
          image: frolvlad/alpine-bash
          command:
            - "bash"
            - "-c"
            - >
              while [ ! -f /out/release.yaml ];
              do
                  echo "No output file - yet";
                  sleep 5;
              done;
              echo "# Release";
              cat /out/release.yaml;
              echo "####";
              echo "# Additional";
              cat /out/additional.yaml
          volumeMounts:
            - name: config-volume
              mountPath: /mnt/
            - name: output-volume
              mountPath: /out/
      volumes:
        - name: config-volume
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: helm-runner-example
        - name: output-volume
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 0
