apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: artifacts-volumes
spec:
  entrypoint: artifact-example
  volumes:
    - name: workdir
      emptyDir: {}

  templates:
    - name: artifact-example
      steps:
        - - name: generate-artifact
            template: whalesay
        - - name: consume-artifact
            template: print-message
            arguments:
              artifacts:
                # bind message to the hello-art artifact
                # generated by the generate-artifact step
                - name: message
                  from: "{{steps.generate-artifact.outputs.artifacts.hello-art}}"

    - name: whalesay
      container:
        image: docker/whalesay:latest
        command: [sh, -c]
        args: ["cowsay hello world | tee /foo/hello_world.txt"]
        volumeMounts:
          - name: workdir
            mountPath: /foo
      outputs:
        artifacts:
          # generate hello-art artifact from /tmp/hello_world.txt
          # artifacts can be directories as well as files
          - name: hello-art
            path: /foo/hello_world.txt

    - name: print-message
      inputs:
        artifacts:
          # unpack the message input artifact
          # and put it at /tmp/message
          - name: message
            path: /foo/message
      container:
        image: alpine:latest
        command: [sh, -c]
        args: ["cat /foo/message"]
        volumeMounts:
          - name: workdir
            mountPath: /foo