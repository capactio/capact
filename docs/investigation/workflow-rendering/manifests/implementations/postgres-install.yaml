ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.bitnami.postgresql # Computed during fetching the manifest
  name: install
  displayName: Install PostgreSQL database
  description: Action which installs PostgreSQL database via Helm chart
  documentationURL: https://github.com/bitnami/charts
  supportURL: https://bitnami.com
  license:
    name: "Apache 2.0"
  maintainers:
    - email: team-dev@projectvoltron.dev
      name: Voltron Dev Team
      url: https://projectvoltron.dev

spec:
  appVersion: "10,11,12,13"

  additionalOutput:
    typeInstanceRelations:
      postgresql:
        uses:
          - helm-release

  implements:
    - path: cap.interface.database.postgresql.install
      revision: 0.1.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0

  imports:
    - interfaceGroupPath: cap.interface.runner.helm
      alias: helm
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: postgres-install
        templates:
          - name: postgres-install
            inputs:
              artifacts:
                - name: input-parameters
            steps:
              - - name: create-install-config
                  action:
                    path: cap.interface.jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: template
                        raw:
                          data: |
                            context:
                              name: "helm-runner-example"
                              dryRun: false
                              timeout: "10m"
                              platform:
                                namespace: "default"
                                serviceAccountName: "helm-runner-example"
                            args:
                              command: "install"
                              generateName: true
                              chart:
                                name: "postgresql"
                                repo: "https://charts.bitnami.com/bitnami"
                              values:
                                image:
                                  pullPolicy: Always
                                postgresqlDatabase: {{ defaultDBName }}
                                postgresqlPassword: {{ superuser.password }}
                              output:{% raw %}
                                directory: "/"
                                helmRelease:
                                  fileName: "helm-release"
                                additional:
                                  fileName: "additional"
                                  value: |-
                                    host: "{{ template "postgresql.primary.fullname" . }}"
                                    port: "{{ template "postgresql.port" . }}"
                                    defaultDBName: "{{ template "postgresql.database" . }}"
                                    superuser:
                                      username: "{{ template "postgresql.username" . }}"
                                      password: "{{ template "postgresql.password" . }}"{% endraw %}

              - - name: postgres-install
                  action:
                    path: cap.interface.runner.helm.run
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.create-install-config.outputs.artifacts.render}}"
              
              - - name: set-type-instance
                  typeInstances:
                    - name: postgresql
                      from: "{{steps.postgres-install.outputs.artifacts.additional}}"

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
