---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: composers.core.capact.io
spec:
  group: core.capact.io
  names:
    kind: Composer
    listKind: ComposerList
    plural: composers
    singular: composer
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Composer is the Schema for the composers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComposerSpec defines the desired state of Composer
            properties:
              input:
                description: Input describes Action input.
                properties:
                  parameters:
                    description: Parameters holds details about Action input parameters.
                    properties:
                      secretRef:
                        description: "SecretRef stores reference to Secret in the
                          same namespace the Action CR is created. \n Required field:
                          - Secret.Data[\"parameters.json\"] - input parameters data
                          in JSON format \n Restricted field: - Secret.Data[\"args.yaml\"]
                          - used by Engine, stores runner rendered arguments - Secret.Data[\"context.yaml\"]
                          - used by Engine, stores runner context - Secret.Data[\"status\"]
                          - stores the runner status - Secret.Data[\"action-policy.json\"]
                          - stores the one-time Action policy in JSON format \n TODO:
                          this should be changed to an object which contains both
                          the Secret name and key name under which the input is stored."
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secretRef
                    type: object
                  policy:
                    description: Describes the one-time User policy.
                    properties:
                      secretRef:
                        description: "SecretRef stores reference to Secret in the
                          same namespace the Action CR is created. \n Required field:
                          - Secret.Data[\"action-policy.json\"] - stores the one-time
                          Action policy in JSON format \n Restricted field: - Secret.Data[\"args.yaml\"]
                          - used by Engine, stores runner rendered arguments - Secret.Data[\"context.yaml\"]
                          - used by Engine, stores runner context - Secret.Data[\"status\"]
                          - stores the runner status - Secret.Data[\"parameters.json\"]
                          - input parameters data in JSON format"
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secretRef
                    type: object
                  typeInstances:
                    description: TypeInstances contains required input TypeInstances
                      passed for Action rendering.
                    items:
                      description: InputTypeInstance holds input TypeInstance reference.
                      properties:
                        id:
                          description: ID is a unique identifier for the input TypeInstance.
                          type: string
                        name:
                          description: Name refers to input TypeInstance name used
                            in rendered Action. Name is not unique as there may be
                            multiple TypeInstances with the same name on different
                            levels of Action workflow.
                          type: string
                      required:
                      - id
                      - name
                      type: object
                    type: array
                type: object
              step:
                additionalProperties:
                  properties:
                    input:
                      additionalProperties:
                        properties:
                          from:
                            type: string
                          raw:
                            type: string
                        type: object
                      type: object
                    interface:
                      properties:
                        path:
                          type: string
                      required:
                      - path
                      type: object
                  required:
                  - input
                  - interface
                  type: object
                type: object
            type: object
          status:
            description: ComposerStatus defines the observed state of Composer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
