{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://projectvoltron.dev/schemas/type-instance.json",
  "type": "object",
  "description": "TypeInstance is an instance a given Type. It stores JSON object that is valid against JSON Schema from Type.",
  "required": [
    "ocfVersion",
    "kind",
    "resourceVersion",
    "metadata",
    "spec"
  ],
  "properties": {
    "ocfVersion": {
      "$id": "#/properties/ocfVersion",
      "type": "string",
      "const": "0.0.1"
    },
    "kind": {
      "$id": "#/properties/kind",
      "type": "string",
      "enum": [
        "TypeInstance"
      ]
    },
    "resourceVersion": {
      "$id": "#/properties/resourceVersion",
      "type": "integer",
      "minimum": 1,
      "description": "Resource version of the manifest content. Every time the manifest content changes, the resource version is updated automatically on server side."
    },
    "metadata": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$id": "#/properties/metadata/properties/id",
          "type": "string",
          "description": "The unique identifier of a given TypeInstance."
        },
        "tags": {
          "$id": "#/properties/metadata/properties/tags",
          "type": "object",
          "description": "The tags is a list of key value, OCF Tags. It provides generic categorization for Implementations, Types and TypeInstances. They are used to filter out a specific Implementation.",
          "additionalProperties": {
            "type": "object",
            "required": [
              "revision"
            ],
            "properties": {
              "revision": {
                "description": "The exact Tag revision.",
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "spec": {
      "$id": "#/properties/spec",
      "type": "object",
      "description": "A container for the TypeInstance specification definition.",
      "required": [
        "typeRef",
        "value"
      ],
      "properties": {
        "typeRef": {
          "$id": "#/properties/spec/properties/typeRef",
          "type": "object",
          "description": "The full path to the Type form which this instance was created.",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "$id": "#/properties/spec/properties/typeRef/0/path",
              "type": "string",
              "description": "Path of a given Type"
            },
            "revision": {
              "$id": "#/properties/spec/properties/typeRef/0/revision",
              "type": "string",
              "description": "Version of the manifest content in the SemVer format.",
              "minLength": 5,
              "pattern": "^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)$"
            }
          },
          "additionalProperties": false
        },
        "value": {
          "$id": "#/properties/spec/properties/value",
          "type": "object",
          "description": "Holds the JSON object for a given TypeInstance with arbitrary data. It needs to be valid against the Type JSONSchema."
        },
        "instrumentation": {
          "$id": "#/properties/spec/properties/instrumentation",
          "description": "Holds the details about instrumentation for given Type Instance",
          "type": "object",
          "properties": {
            "metrics": {
              "$id": "#/properties/spec/properties/instrumentation/metrics",
              "description": "Details about metrics exposed for a given TypeInstance",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "url": {
                  "$id": "#/properties/spec/properties/instrumentation/metrics/url",
                  "description": "URL of metrics endpoint",
                  "type": "string",
                  "format": "uri"
                },
                "regex": {
                  "type": "string",
                  "$id": "#/properties/spec/properties/instrumentation/metrics/regex",
                  "description": "Regex for exposed metrics"
                },
                "dashboards": {
                  "type": "array",
                  "$id": "#/properties/spec/properties/instrumentation/metrics/dashboards",
                  "description": "Metrics dashboards",
                  "items": [
                    {
                      "properties": {
                        "url": {
                          "$id": "#/properties/spec/properties/instrumentation/metrics/dashboards/0/url",
                          "description": "URL of metrics dashboard",
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                }
              }
            },
            "health": {
              "$id": "#/properties/spec/properties/instrumentation/health",
              "description": "Details about health of a given TypeInstance",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "url": {
                  "$id": "#/properties/spec/properties/instrumentation/health/url",
                  "description": "URL of health endpoint",
                  "type": "string",
                  "format": "uri"
                },
                "method": {
                  "$id": "#/properties/spec/properties/instrumentation/health/method",
                  "description": "Method of HTTP request",
                  "type": "string",
                  "enum": [
                    "GET",
                    "POST"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
