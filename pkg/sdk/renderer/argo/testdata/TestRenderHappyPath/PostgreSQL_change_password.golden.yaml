args:
  workflow:
    arguments: {}
    entrypoint: capact-root
    templates:
    - inputs:
        artifacts:
        - name: postgresql
        - name: role
        - name: input-parameters
      metadata: {}
      name: main
      outputs: {}
      steps:
      - - arguments:
            artifacts:
            - name: template
              raw:
                data: |
                  export PGPASSWORD=<@role.password@>
                  PSQL_CMD="psql -h <@postgresql.host@> -U <@role.name@> <@postgresql.defaultDBName@> -c"
                  ${PSQL_CMD} "ALTER ROLE <@role.name@> WITH PASSWORD '<@input.password@>'"

                  cat <<EOF > /role.yml
                  name: <@role.name@>
                  password: <@input.password@>
                  EOF
                  sleep 1
            - from: '{{inputs.artifacts.postgresql}}'
              name: input-parameters
            - name: configuration
              raw:
                data: 'prefix: postgresql'
          name: render-change-password-script
          template: main-render-change-password-script-template
      - - arguments:
            artifacts:
            - from: '{{steps.render-change-password-script.outputs.artifacts.render}}'
              name: template
            - from: '{{inputs.artifacts.role}}'
              name: input-parameters
            - name: configuration
              raw:
                data: 'prefix: role'
          name: fill-params-from-role
          template: main-fill-params-from-role-template
      - - arguments:
            artifacts:
            - from: '{{steps.fill-params-from-role.outputs.artifacts.render}}'
              name: template
            - from: '{{inputs.artifacts.input-parameters}}'
              name: input-parameters
            - name: configuration
              raw:
                data: 'prefix: input'
          name: fill-params-from-role-input
          template: main-fill-params-from-role-input-template
      - - arguments:
            artifacts:
            - from: '{{steps.fill-params-from-role-input.outputs.artifacts.render}}'
              name: script
          name: change-password
          template: change-password
      - - arguments:
            artifacts:
            - from: '{{steps.change-password.outputs.artifacts.role}}'
              name: role
          name: output-role
          template: output-role
    - container:
        args:
        - /template.yml
        - /values.yml
        - --format=yaml
        - -o
        - /render.yml
        image: ghcr.io/capactio/jinja2:v2.11.2
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: template
          path: /template.yml
        - name: input-parameters
          path: /values.yml
      metadata: {}
      name: main-render-change-password-script-template
      outputs:
        artifacts:
        - name: render
          path: /render.yml
    - container:
        args:
        - /template.yml
        - /values.yml
        - --format=yaml
        - -o
        - /render.yml
        image: ghcr.io/capactio/jinja2:v2.11.2
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: template
          path: /template.yml
        - name: input-parameters
          path: /values.yml
      metadata: {}
      name: main-fill-params-from-role-template
      outputs:
        artifacts:
        - name: render
          path: /render.yml
    - container:
        args:
        - /template.yml
        - /values.yml
        - --format=yaml
        - -o
        - /render.yml
        image: ghcr.io/capactio/jinja2:v2.11.2
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: template
          path: /template.yml
        - name: input-parameters
          path: /values.yml
      metadata: {}
      name: main-fill-params-from-role-input-template
      outputs:
        artifacts:
        - name: render
          path: /render.yml
    - container:
        args:
        - /script.sh
        command:
        - bash
        image: postgres:11
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: script
          path: /script.sh
      metadata: {}
      name: change-password
      outputs:
        artifacts:
        - name: role
          path: /role.yml
    - container:
        args:
        - sleep 1
        command:
        - sh
        - -c
        image: alpine:3.7
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: role
          path: /typeinstance
      metadata: {}
      name: output-role
      outputs:
        artifacts:
        - globalName: role
          name: role
          path: /typeinstance
    - inputs: {}
      metadata: {}
      name: capact-root
      outputs: {}
      steps:
      - - arguments: {}
          name: inject-input-type-instances-uuid-step
          template: inject-input-type-instances-uuid
      - - arguments: {}
          name: inject-runner-context-step
          template: inject-runner-context
      - - arguments: {}
          name: populate-input-parameters-step
          template: populate-input-parameters
      - - arguments:
            artifacts:
            - from: '{{steps.populate-input-parameters-step.outputs.artifacts.input-parameters}}'
              name: input-parameters
            - from: '{{workflow.outputs.artifacts.role}}'
              name: role
            - from: '{{workflow.outputs.artifacts.postgresql}}'
              name: postgresql
          name: start-entrypoint
          template: main
      - - arguments:
            artifacts:
            - from: '{{workflow.outputs.artifacts.role}}'
              name: 6fc7dd6b-d150-4af3-a1aa-a868962b7d68
            - name: payload
              raw:
                data: |
                  - createdBy: default/action
                    id: 6fc7dd6b-d150-4af3-a1aa-a868962b7d68
                    ownerID: default/action
                    typeInstance:
                      attributes: []
          name: upload-update-type-instances-step
          template: upload-update-type-instances
    - container:
        args:
        - sleep 1
        command:
        - sh
        - -c
        image: alpine:3.7
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /input
          name: user-secret-volume
      inputs: {}
      metadata: {}
      name: populate-input-parameters
      outputs:
        artifacts:
        - name: input-parameters
          path: /input/input-parameters
      volumes:
      - name: user-secret-volume
        secret:
          items:
          - key: parameter-input-parameters
            path: input-parameters
          optional: false
          secretName: user-input
    - container:
        args:
        - sleep 1
        command:
        - sh
        - -c
        image: alpine:3.7
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /input
          name: runner-context
          readOnly: true
      inputs: {}
      metadata: {}
      name: inject-runner-context
      outputs:
        artifacts:
        - globalName: runner-context
          name: runner-context
          path: /input/context.yaml
      volumes:
      - name: runner-context
        secret:
          items:
          - key: key
            path: context.yaml
          optional: false
          secretName: secret
    - container:
        env:
        - name: APP_ACTION
          value: DownloadAction
        - name: APP_DOWNLOAD_CONFIG
          value: '{6fc7dd6b-d150-4af3-a1aa-a868962b7d68,/role.yaml},{f2421415-b8a4-464b-be12-b617794411c5,/postgresql.yaml}'
        - name: APP_LOCAL_HUB_ENDPOINT
          value: http://capact-hub-local.capact-system/graphql
        - name: APP_PUBLIC_HUB_ENDPOINT
          value: http://capact-hub-public.capact-system/graphql
        image: alpine:3.7
        name: ""
        resources: {}
      inputs: {}
      metadata: {}
      name: inject-input-type-instances-uuid
      outputs:
        artifacts:
        - globalName: role
          name: role
          path: /role.yaml
        - globalName: postgresql
          name: postgresql
          path: /postgresql.yaml
    - container:
        env:
        - name: APP_ACTION
          value: UpdateAction
        - name: APP_UPDATE_CONFIG_PAYLOAD_FILEPATH
          value: /update/payload
        - name: APP_UPDATE_CONFIG_TYPE_INSTANCES_DIR
          value: /update/typeInstances
        - name: APP_LOCAL_HUB_ENDPOINT
          value: http://capact-hub-local.capact-system/graphql
        - name: APP_PUBLIC_HUB_ENDPOINT
          value: http://capact-hub-public.capact-system/graphql
        image: alpine:3.7
        imagePullPolicy: IfNotPresent
        name: ""
        resources: {}
      inputs:
        artifacts:
        - name: 6fc7dd6b-d150-4af3-a1aa-a868962b7d68
          path: /update/typeInstances/6fc7dd6b-d150-4af3-a1aa-a868962b7d68
        - name: payload
          path: /update/payload
      metadata: {}
      name: upload-update-type-instances
      outputs: {}
runnerInterface: cap.interface.runner.argo.run
