metadata:
  attributes:
    - metadata:
        description: Specifies that a given manifest is related to Terraform.
        displayName: Terraform
        documentationURL: https://capact.io
        iconURL:
        maintainers:
          - email: team-dev@capact.io
            name: Capact Dev Team
        name: terraform
        path: cap.attribute.infra.iac.terraform
        prefix: cap.attribute.infra.iac
        supportURL:
      revision: 0.1.0
      signature:
        och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
      spec:
    - metadata:
        description: Specifies that a given manifest is related to AWS
        displayName: Amazon Web Services Provider
        documentationURL: https://capact.io
        iconURL:
        maintainers:
          - email: team-dev@capact.io
            name: Capact Dev Team
        name: aws
        path: cap.attribute.cloud.provider.aws
        prefix: cap.attribute.cloud.provider
        supportURL:
      revision: 0.1.0
      signature:
        och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
      spec:
  description: Action which provisions AWS RDS for PostgreSQL database using
    Terraform for advanced users
  displayName: Provision AWS RDS for PostgreSQL database using Terraform in
    advanced mode
  documentationURL: https://aws.amazon.com/rds/postgresql/
  iconURL:
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
  name: provision
  path: cap.implementation.aws.rds.postgresql.provision
  prefix: cap.implementation.aws.rds.postgresql
  supportURL: https://aws.amazon.com/rds/postgresql/
revision: 0.2.0
signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
spec:
  action:
    args:
      workflow:
        entrypoint: rds-provision
        templates:
          - inputs:
              artifacts:
                - name: input-parameters
            name: rds-provision
            outputs:
              artifacts:
                - from: "{{steps.render-postgresql.outputs.artifacts.render}}"
                  name: postgresql
                - from: "{{steps.render-rds.outputs.artifacts.render}}"
                  name: rds-instance
            steps:
              - - arguments:
                    artifacts:
                      - from: "{{inputs.artifacts.input-parameters}}"
                        name: input-parameters
                      - name: configuration
                        raw:
                          data: 'prefix: input

                          '
                      - name: template
                        raw:
                          data: |
                            variables: |+
                              <% if input.engine -%>
                              engine = "<@ input.engine @>"
                              <%- endif %>

                              <% if input.engine_version -%>
                              engine_version = "<@ input.engine_version @>"
                              <%- endif %>

                              <% if input.major_engine_version -%>
                              major_engine_version = "<@ input.major_engine_version @>"
                              <%- endif %>

                              <% if input.region -%>
                              region = "<@ input.region @>"
                              <%- endif %>

                              <% if input.tier -%>
                              tier = "<@ input.tier @>"
                              <%- endif %>

                              <% if input.ingress_rule_cidr_blocks -%>
                              ingress_rule_cidr_blocks = "<@ input.ingress_rule_cidr_blocks @>"
                              <%- endif %>

                              <% if input.res_name -%>
                              res_name = "<@ input.res_name @>"
                              <%- endif %>

                              <% if input.publicly_accessible -%>
                              publicly_accessible = <@ input.publicly_accessible | tojson @>
                              <%- endif %>

                              <% if input.allocated_storage -%>
                              allocated_storage = <@ input.allocated_storage @>
                              <%- endif %>

                              <% if input.max_allocated_storage -%>
                              max_allocated_storage = <@ input.max_allocated_storage @>
                              <%- endif %>

                              <% if input.storage_encrypted -%>
                              storage_encrypted = <@ input.storage_encrypted | tojson @>
                              <%- endif %>

                              <% if input.multi_az -%>
                              multi_az = <@ input.multi_az | tojson @>
                              <%- endif %>

                              <% if input.deletion_protection -%>
                              deletion_protection = <@ input.deletion_protection | tojson @>
                              <%- endif %>

                              <% if input.backup_retention_period -%>
                              backup_retention_period = <@ input.backup_retention_period @>
                              <%- endif %>

                              <% if input.performance_insights_enabled -%>
                              performance_insights_enabled = <@ input.performance_insights_enabled | tojson @>
                              <%- endif %>

                              <% if input.performance_insights_retention_period -%>
                              performance_insights_retention_period = <@ input.performance_insights_retention_period @>
                              <%- endif %>

                              <% if input.monitoring_interval -%>
                              monitoring_interval = <@ input.monitoring_interval @>
                              <%- endif %>

                              <% if input.skip_final_snapshot -%>
                              skip_final_snapshot = <@ input.skip_final_snapshot | tojson @>
                              <%- endif %>

                              <% if input.maintenance_window -%>
                              maintenance_window = "<@ input.maintenance_window @>"
                              <%- endif %>

                              <% if input.backup_window -%>
                              backup_window = "<@ input.backup_window @>"
                              <%- endif %>

                              user_name = "<@ input.superuser.username | default('postgres') @>"
                              user_password = "<@ input.superuser.password | default(random_word(length=16)) @>"
                            command: "apply"
                            module:
                              name: "rds"
                              source: "https://storage.googleapis.com/capactio-terraform-modules/terraform.aws.rds.postgresql.provision/0.1.0/module.tgz"
                            env:
                            - AWS_ACCESS_KEY_ID=<@ aws.accessKeyID @>
                            - AWS_SECRET_ACCESS_KEY=<@ aws.secretAccessKey @>
                            output:
                              goTemplate:
                                host: "{{ .instance_ip_addr }}"
                                port: "{{ .port }}"
                                defaultDBName: "{{ .defaultDBName }}"
                                superuser:
                                  username: "{{ .username }}"
                                  password: "{{ .password }}"
                                identifier: "{{ .identifier }}"
                                availability_zone: "{{ .availability_zone }}"
                                class: "{{ .class }}"
                  name: create-module-args
                  capact-action: jinja2.template
              - - arguments:
                    artifacts:
                      - from: "{{steps.create-module-args.outputs.artifacts.render}}"
                        name: template
                      - from: "{{workflow.outputs.artifacts.aws-credentials}}"
                        name: input-parameters
                      - name: configuration
                        raw:
                          data: 'prefix: aws

                          '
                  name: fill-aws-params-in-module-args
                  capact-action: jinja2.template
              - - arguments:
                    artifacts:
                      - from: "{{steps.fill-aws-params-in-module-args.outputs.artifacts.render}}"
                        name: input-parameters
                      - from: "{{workflow.outputs.artifacts.runner-context}}"
                        name: runner-context
                  name: terraform-apply
                  capact-action: terraform.apply
                  capact-outputTypeInstances:
                    - from: terraform-release
                      name: terraform-release
              - - arguments:
                    artifacts:
                      - from: "{{steps.terraform-apply.outputs.artifacts.additional}}"
                        name: input-parameters
                      - name: configuration
                        raw:
                          data: ''
                      - name: template
                        raw:
                          data: |
                            host: "<@ host @>"
                            port: <@ port @>
                            defaultDBName: "<@ defaultDBName @>"
                            superuser:
                              username: "<@ superuser.username @>"
                              password: "<@ superuser.password @>"
                  name: render-postgresql
                  capact-action: jinja2.template
                  capact-outputTypeInstances:
                    - from: render
                      name: postgresql
              - - arguments:
                    artifacts:
                      - from: "{{steps.terraform-apply.outputs.artifacts.additional}}"
                        name: input-parameters
                      - name: configuration
                        raw:
                          data: ''
                      - name: template
                        raw:
                          data: |
                            identifier: "<@ identifier @>"
                            availability_zone: "<@ availability_zone @>"
                            class: "<@ class @>"
                  name: render-rds
                  capact-action: jinja2.template
                  capact-outputTypeInstances:
                    - from: render
                      name: rds-instance
    runnerInterface: argo.run
  additionalInput:
    typeInstances: []
  additionalOutput:
    typeInstances: []
  appVersion: 10, 11, 12, 13
  implements:
    - path: cap.interface.aws.rds.postgresql.provision
      revision: 0.1.0
  imports:
    - alias: jinja2
      appVersion:
      interfaceGroupPath: cap.interface.templating.jinja2
      methods:
        - name: template
          revision: 0.1.0
    - alias: terraform
      appVersion:
      interfaceGroupPath: cap.interface.runner.terraform
      methods:
        - name: apply
          revision: 0.1.0
    - alias: argo
      appVersion:
      interfaceGroupPath: cap.interface.runner.argo
      methods:
        - name: run
          revision: 0.1.0
  outputTypeInstanceRelations:
    - typeInstanceName: rds-instance
      uses:
    - typeInstanceName: postgresql
      uses:
        - terraform-release
        - rds-instance
  requires:
    - allOf: []
      anyOf: []
      oneOf:
        - alias:
          typeRef:
            path: cap.core.type.platform.kubernetes
            revision: 0.1.0
          valueConstraints:
      prefix: cap.core.type.platform
    - allOf:
        - alias: aws-credentials
          typeRef:
            path: cap.type.aws.auth.credentials
            revision: 0.1.0
          valueConstraints:
      anyOf: []
      oneOf: []
      prefix: cap.type.aws.auth
