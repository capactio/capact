ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.postgresql
  name: change-password
  displayName: Change PostgreSQL role password
  description: Action which changes a PostgreSQL role's password
  documentationURL: https://www.postgresql.org/docs/
  supportURL: https://www.postgresql.org/
  license:
    name: "Apache 2.0"
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
      url: https://capact.io

spec:
  appVersion: "8.x.x"

  implements:
    - path: cap.interface.database.postgresql.change-password
      revision: 0.1.0

  requires:
    - oneOf:
        - typeRef:
            path: cap.core.type.platform.kubernetes
            revision: 0.1.0
          valueConstraints:
      prefix: cap.core.type.platfor

  outputTypeInstanceRelations: []

  imports:
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.templating.jinja2
      alias: jinja2
      methods:
        - name: template
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: main
        templates:
          - name: main
            inputs:
              artifacts:
                - name: postgresql
                - name: role
                - name: input-parameters
            steps:
              - - name: render-change-password-script
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: template
                        raw:
                          data: |
                            export PGPASSWORD=<@role.password@>
                            PSQL_CMD="psql -h <@postgresql.host@> -U <@role.name@> <@postgresql.defaultDBName@> -c"
                            ${PSQL_CMD} "ALTER ROLE <@role.name@> WITH PASSWORD '<@input.password@>'"

                            cat <<EOF > /role.yml
                            name: <@role.name@>
                            password: <@input.password@>
                            EOF
                            sleep 1
                      - name: input-parameters
                        from: "{{inputs.artifacts.postgresql}}"
                      - name: configuration
                        raw:
                          data: "prefix: postgresql"

              - - name: fill-params-from-role
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: template
                        from: "{{steps.render-change-password-script.outputs.artifacts.render}}"
                      - name: input-parameters
                        from: "{{inputs.artifacts.role}}"
                      - name: configuration
                        raw:
                          data: "prefix: role"

              - - name: fill-params-from-role-input
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: template
                        from: "{{steps.fill-params-from-role.outputs.artifacts.render}}"
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: configuration
                        raw:
                          data: "prefix: input"

              - - name: change-password
                  template: change-password
                  capact-updateTypeInstances:
                    - name: role
                      from: role
                  arguments:
                    artifacts:
                      - name: script
                        from: "{{steps.fill-params-from-role-input.outputs.artifacts.render}}"

          - name: change-password
            inputs:
              artifacts:
                - name: script
                  path: /script.sh
            container:
              image: postgres:11
              command: [bash]
              args: ["/script.sh"]
            outputs:
              artifacts:
                - name: role
                  path: /role.yml

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
