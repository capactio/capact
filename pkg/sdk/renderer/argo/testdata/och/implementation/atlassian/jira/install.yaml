---
metadata:
  attributes: []
  description: Action which installs Jira via Helm chart
  displayName: Install Jira
  documentationURL: https://github.com/javimox/helm-charts/tree/master/charts/jira-software
  iconURL: https://mox.sh/helm/
  maintainers:
    - email: team-dev@projectvoltron.dev
      name: Voltron Dev Team
  name: install
  path: cap.implementation.atlassian.jira.install
  prefix: cap.implementation.atlassian.jira
  supportURL: https://mox.sh/helm/
revision: 0.1.0
signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
spec:
  additionalInput:
    typeInstances:
      - name: postgresql
        typeRef:
          path: cap.type.database.postgresql.config
          revision: 0.1.0
        verbs:
          - GET
  outputTypeInstanceRelations:
    - typeInstanceName: jira-config
      uses: [jira-helm-release, postgresql]
  appVersion: 8.x.x
  implements:
    - path: cap.interface.productivity.jira.install
      revision: 0.1.0
  imports:
    - alias: helm
      appVersion: 3.x.x
      interfaceGroupPath: cap.interface.runner.helm
      methods:
        - name: run
          revision: 0.1.0
    - alias: argo
      appVersion:
      interfaceGroupPath: cap.interface.runner.argo
      methods:
        - name: run
          revision: 0.1.0
    - alias: jinja2
      appVersion:
      interfaceGroupPath: cap.interface.templating.jinja2
      methods:
        - name: template
          revision: 0.1.0
    - alias: postgresql
      appVersion:
      interfaceGroupPath: cap.interface.database.postgresql
      methods:
        - name: install
          revision: 0.1.0
  requires:
    - allOf: []
      anyOf: []
      oneOf:
        - typeRef:
            path: cap.core.type.platform.kubernetes
            revision: 0.1.0
          valueConstraints:
      prefix: cap.core.type.platform
  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: jira-install
        templates:
          - inputs:
              artifacts:
                - name: input-parameters
                - name: postgresql
                  optional: true
            outputs:
              artifacts:
                - name: jira-config
                  from: "{{steps.helm-run.outputs.artifacts.additional}}"
            name: jira-install
            steps:
              - - voltron-action: postgresql.install
                  name: install-db
                  voltron-when: postgresql == nil
                  voltron-outputTypeInstances:
                    - name: postgresql
                      from: postgresql
                  arguments:
                    artifacts:
                      - name: input-parameters
                        raw:
                          data: |
                            superuser:
                              username: jira
                              password: okon
                            defaultDBName: jira
              - - voltron-action: jinja2.template
                  name: create-helm-args
                  arguments:
                    artifacts:
                      - name: template
                        raw:
                          data: |
                            command: "install"
                            generateName: true
                            chart:
                              name: "jira-software"
                              repo: "https://helm.mox.sh"
                            output:{% raw %}
                              goTemplate:
                                version: "{{ .Values.image.tag }}"
                                host: '{{ template "jira-software.fullname" . }}'{% endraw %}
                            values:
                              postgresql:
                                enabled: false
                              databaseConnection:
                                host: "{{ host }}"
                                user: "{{ superuser.username }}"
                                password: "{{ superuser.password }}"
                                database: "{{ defaultDBName }}"
                              ingress:
                                enabled: true
                                hosts:
                                - host: jira-cloud.voltron.local
                                  paths: ['/']
                      - name: input-parameters
                        from: "{{steps.install-db.outputs.artifacts.postgresql}}"
              - - voltron-outputTypeInstances:
                    - name: jira-config
                      from: additional
                    - name: jira-helm-release
                      from: helm-release
                  voltron-action: helm.run
                  name: helm-run
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.create-helm-args.outputs.artifacts.render}}"
                      - name: runner-context
                        from: "{{workflow.outputs.artifacts.runner-context}}"
