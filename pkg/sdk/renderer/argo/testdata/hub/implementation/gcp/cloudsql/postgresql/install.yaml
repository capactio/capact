---
metadata:
  attributes:
    - metadata:
        path: cap.attribute.cloud.provider.gcp
      revision: 0.1.0
  displayName: Install PostgreSQL database using CloudSQL instance
  description: Action which provisions CloudSQL for PostgreSQL database
  documentationURL: https://cloud.google.com/cloudsql
  supportURL: https://cloud.google.com/cloudsql
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
  name: install
  path: cap.implementation.gcp.cloudsql.postgresql.install
  prefix: cap.implementation.gcp.cloudsql.postgresql
revision: 0.1.0
spec:
  additionalInput:
    typeInstances: []
  outputTypeInstanceRelations:
    - typeInstanceName: postgresql
      uses:
        - cloudsql-instance
  appVersion: '10,11,12,13'
  implements:
    - path: cap.interface.database.postgresql.install
      revision: 0.1.0
  imports:
    - alias: cloudsql
      appVersion:
      interfaceGroupPath: cap.interface.runner.cloudsql
      methods:
        - name: run
          revision: 0.1.0
    - alias: jinja2
      appVersion:
      interfaceGroupPath: cap.interface.templating.jinja2
      methods:
        - name: template
          revision: 0.1.0
    - alias: argo
      appVersion:
      interfaceGroupPath: cap.interface.runner.argo
      methods:
        - name: run
          revision: 0.1.0
  requires:
    - allOf: []
      anyOf: []
      oneOf:
        - typeRef:
            path: cap.type.gcp.auth.service-account
            revision: 0.1.0
          valueConstraints: {}
          alias: gcp-sa
      prefix: cap.type.gcp.auth
  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: postgres-install
        templates:
          - name: postgres-install
            inputs:
              artifacts:
                - name: input-parameters # Entrypoint template gets the user parameters in 'input-parameters' artifacts.
            outputs:
              artifacts:
                - name: postgresql
                  from: "{{steps.cloudsql-run.outputs.artifacts.additional}}"
            steps:
              - - name: create-cloudsql-args
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: template
                        raw:
                          # TODO: currently `{{ superuser.username }}` is not supported
                          data: |
                            group: "sql"
                            command: "create"
                            generateName: true
                            instance: # this maps to https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1beta4/instances
                              databaseVersion: "POSTGRES_11"
                              region: "us-central"
                              defaultDBName: {{ defaultDBName }}
                              rootPassword: {{ superuser.password }}
                              settings:
                                tier: "db-g1-small"
                                ipConfiguration:
                                  authorizedNetworks:
                                    - name: internet
                                      value: "0.0.0.0/0"
                            output:{% raw %}
                              goTemplate:
                                host: "{{ (index .DBInstance.IpAddresses 0).IpAddress  }}"
                                port: "{{ .Port }}"
                                defaultDBName: "{{ .DefaultDBName }}"
                                superuser:
                                  username: "{{ .Username }}"
                                  password: "{{ .Password }}"{% endraw %}
              - - name: cloudsql-run
                  capact-action: cloudsql.run
                  capact-outputTypeInstances: # Defines which artifacts are output TypeInstances
                    - name: postgresql
                      from: additional
                    - name: cloudsql-instance
                      from: cloudsql-instance
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.create-cloudsql-args.outputs.artifacts.render}}"
                      - name: runner-context
                        from: "{{workflow.outputs.artifacts.runner-context}}"
                      - name: gcp-sa
                        from: "{{workflow.outputs.artifacts.gcp-sa}}"
