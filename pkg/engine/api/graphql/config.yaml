schema: schema.graphql

# Let gqlgen know where to put the generated server
exec:
  filename: schema_gen.go
  package: graphql

# Let gqlgen know where to the generated models (if any)
model:
  filename: models_gen.go
  package: graphql

# Optional turns on binding to field names by tag provided
struct_tag: json

# Tell gqlgen about any existing models you want to reuse for
# graphql. These normally come from the db or a remote api.
models:
  Timestamp:
    model: "capact.io/capact/pkg/engine/api/graphql.Timestamp"
  JSON:
    model: "capact.io/capact/pkg/engine/api/graphql.JSON"
  PolicyRule:
    model: "capact.io/capact/pkg/engine/api/graphql.PolicyRule"
  PolicyRuleImplementationConstraints:
    model: "capact.io/capact/pkg/engine/api/graphql.PolicyRuleImplementationConstraints"
  ManifestReferenceWithOptionalRevision:
    model: "capact.io/capact/pkg/engine/api/graphql.ManifestReferenceWithOptionalRevision"
  PolicyRuleInjectData:
    model: "capact.io/capact/pkg/engine/api/graphql.PolicyRuleInjectData"
  RequiredTypeInstanceReference:
    model: "capact.io/capact/pkg/engine/api/graphql.RequiredTypeInstanceReference"
  AdditionalTypeInstanceReference:
    model: "capact.io/capact/pkg/engine/api/graphql.AdditionalTypeInstanceReference"
  InterfacePolicy:
    model: "capact.io/capact/pkg/engine/api/graphql.InterfacePolicy"

