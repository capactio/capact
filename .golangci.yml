issues:
  exclude-use-default: false
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # This is a special case. We want to have a different name for each Resolver
    # as we are using struct embedding pattern in root_resolver.go files. Each name needs
    # to be unique example:
    #  - typeinstance.Resolver == attributes.Resolver (same field name in embedded struct)
    #  - typeinstance.TypeInstanceResolver != attributes.AttributeResolver (diff field name in embedded struct)
    - path: internal/.*/graphql/.*resolver/.*.go
      text: "consider calling this Resolver"
      linters:
        - golint
  exclude:
    # Check this issue for more info: https://github.com/kyoh86/scopelint/issues/4
    - Using the variable on range scope `tc` in function literal
    # EXC0001 errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
    # EXC0008 gosec: Duplicated errcheck checks
    - (G104|G307)
run:
  tests: true
  skip-files:
    - ".*\\.generated\\.go$"
linters:
  disable-all: true
  enable:
    - deadcode
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - structcheck
    - typecheck
    - unused
    - varcheck
    - revive
    - gofmt
    - misspell
    - gochecknoinits
    - unparam
    - exportloopref
    - gosec
    - goimports
    - whitespace
    - bodyclose
    - gocyclo

  fast: false
