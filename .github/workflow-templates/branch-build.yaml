name: Master build

on: 
  push:
    paths:
    - '**.go'
    - '**.graphql'
    branches: [ $default-branch ]


jobs:
  entry-tests:
    name: Lint, Unit, Generation Tests
    runs-on: ubuntu-latest
      
    steps:    
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          export_default_credentials: true
          service_account_key: ${{ secrets.GCR_CREDS }}

      - name: Setup env
        run: |
          . ./env_setup.sh

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Run linting
        run: | 
          make test-lint

      - name: Run unit tests
        run: make test-unit

      - name: Run generation
        run: |
          make test-generated
        
      - name: Run k8s-controller
        run: |
          make test-k8s-controller
  
  
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix-app: ${{ steps.set-matrix-app.outputs.matrix }}
      matrix-test: ${{ steps.set-matrix-test.outputs.matrix }}
      matrix-infra: ${{ steps.set-matrix-infra.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: setup env
        run: . ./env_setup.sh
      - id: set-matrix-app
        run: echo "::set-output ${APPS}"
      - id: set-matrix-test
        run: echo "::set-output ${TESTS}"
      - id: set-matrix-infra
        run: echo "::set-output ${INFRAS}"


  build-app:
    name: Build ${{ matrix.APP }}
    runs-on: ubuntu-latest
    needs: prepare-matrix 
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix-app)}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_CREDS }}
          export_default_credentials: true
      - name: Setup env
        run: |
          . ./env_setup.sh
      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - run: gcloud auth configure-docker --project ${PROJECT_ID} -q
      - run: make build-app-image-${{ matrix.APP }}
      - run: make push-app-image-${{ matrix.APP }}


  build-tests:
    name: Build ${{ matrix.TEST }}
    runs-on: ubuntu-latest
    needs: prepare-matrix 
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix-test)}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_CREDS }}
          export_default_credentials: true
      - name: Setup env
        run: |
          . ./env_setup.sh
      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - run: gcloud auth configure-docker --project ${PROJECT_ID} -q
      - run: make build-test-image-${{ matrix.TEST }}
      - run: make push-test-image-${{ matrix.TEST }}

  build-infra:
    name: Build ${{ matrix.INFRA }}
    runs-on: ubuntu-latest
    needs: prepare-matrix 
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix-infra)}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_CREDS }}
          export_default_credentials: true
      - name: Setup env
        run: |
          . ./env_setup.sh
      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - run: gcloud auth configure-docker --project ${PROJECT_ID} -q
      - run: make build-infra-image-${{ matrix.INFRA }}
      - run: make push-infra-image-${{ matrix.INFRA }}

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: [build-app, build-infra, build-tests]    
    steps:    
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_CREDS }}
          export_default_credentials: true

      - name: Setup env
        run: |
          . ./env_setup.sh

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Run integration tests
        run: | 
          make test-integration

    update-cluster:
    name: Update cluster
    runs-on: ubuntu-latest
    needs: [ integration-tests ] 

    steps:    
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Setup env
        run: |
          . ./env_setup.sh
 
      - name: Get cluster credentials
        run: | 
          gcloud config set project ${PROJECT_ID}
          gcloud container clusters get-credentials ${TF_VAR_cluster_name} --zone=${TF_VAR_region}
          
      - name: Network enable
        run: | 
          sudo snap install yq
          AUTHORIZED=$(gcloud container clusters describe ${TF_VAR_cluster_name} --zone ${TF_VAR_region} |yq r - 'masterAuthorizedNetworksConfig.cidrBlocks[*].cidrBlock')
          AUTHORIZED=$(echo ${AUTHORIZED} | tr ' ' ',' | sed 's/^,//g;s/ //g')
          AUTHORIZED=$(printf "%s,%s/32" "${AUTHORIZED}" $(curl ${GET_IP_SERVICE}))
          gcloud container clusters update ${TF_VAR_cluster_name} --zone ${TF_VAR_region} --enable-master-authorized-networks \
          --master-authorized-networks ${AUTHORIZED}
    
      - name: Upgrade services
        run: | 
          for SERVICE in ${SERVICES}
          do  
            helm upgrade ${SERVICE} deploy/kubernetes/voltron/charts/${SERVICE} -f deploy/kubernetes/voltron/charts/${SERVICE}/values.yaml \
            --set global.containerRegistry.overrideTag=${DOCKER_TAG} --namespace ${NAMESPACE}
          done


