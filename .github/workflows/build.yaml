name: Build-and-unit-tests

on: 
  push:
    paths:
    - '**.go'
    - '**.graphql'
    - '**.yaml'
    - '**.sh'
    branches:    
    - 'devops-20201014'

jobs:
  entry-tests:
    name: Lint, Unit, Generation Tests
    runs-on: ubuntu-latest
      
    steps:    
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          export_default_credentials: true
          service_account_key: ${{ secrets.GCR_CREDS }}

      - name: Setup env
        run: |
          . ./env_setup.sh

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}

#       - name: Run linting
#         run: | 
#           make test-lint
#         env:
#           SKIP_DEPS_INSTALLATION: false

#       - name: Run unit tests
#         run: make test-unit

      - name: Run generation
        run: |
          git status --porcelain

#          make test-generated
        env:
          SKIP_DEPS_INSTALLATION: false
  prepare-matrix:
    runs-on: ubuntu-latest
    needs: entry-tests
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: setup env
      run: . ./env_setup.sh
    - name: check
      run: echo ${APPS}>qqq && cat qqq
    - name: set-matrix
      run: echo "::set-output name=matrix::{\"include\":[{\"APP\":\"gateway\"},{\"APP\":\"k8s-engine\"},{\"APP\":\"och\"}]}"


  
  build:
    name: Build ${{ matrix.APP }}
    runs-on: ubuntu-latest
    needs: prepare-matrix  
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
#        APP: [gateway, k8s-engine, och]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_CREDS }}
          export_default_credentials: true
      - name: Setup env
        run: |
          . ./env_setup.sh
      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - run: gcloud auth configure-docker --project ${PROJECT_ID} -q
      - run: make build-app-image-${{ matrix.APP }}
      - run: make push-app-image-${{ matrix.APP }}


            
# #       - name: Build & push image
# #         run: |
# #           gcloud auth configure-docker --project ${PROJECT_ID} -q
# #           for APP in ${APPS}
# #           do  
# #             echo ${APP} 
# #             make build-app-image-${APP} >build_${APP}.log 2>&1 \
# #             && make push-app-image-${APP} >push_${APP}.log 2>&1 &
# #           done
# #           wait
# #           cat build_*.log
# #           cat push_*.log

# #       - name: Archive build images log
# #         uses: actions/upload-artifact@v2
# #         with:
# #           name: docker-logs
# #           path: ./*.log

# #   integration-tests:
# #     name: Integration tests
# #     runs-on: ubuntu-latest
# #     needs: build-image     
# #     steps:    
# #       - name: Checkout code
# #         uses: actions/checkout@v2
# #       - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
# #         with:
# #           service_account_key: ${{ secrets.GCR_CREDS }}
# #           export_default_credentials: true

# #       - name: Setup env
# #         run: |
# #           . ./env_setup.sh

# #       - name: Setup golang
# #         uses: actions/setup-go@v2
# #         with:
# #           go-version: ${{env.GO_VERSION}}

# #       - name: Run unit tests
# #         run: | 
# #           make test-integration
# #         env:
# #           SKIP_DEPS_INSTALLATION: false

