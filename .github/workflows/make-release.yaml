name: Make release

# Required secrets:
# GCS_CREDS - Credentials to Google Cloud Storage for binary and chart releases
# GH_PAT - GitHub username with personal access token with permissions to make commits to repository, must be in format "<username>:<PAT>"

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version in SemVer (e.g. '0.5.0')
        required: true

jobs:
  make-release:
    name: Make release
    runs-on: ubuntu-latest
    environment: Release
    permissions:
      contents: write
      packages: write
      pull-requests: read
      issues: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Git credentials
        # Replacing the GH Action token with PAT is required to trigger the branch-build workflow on a commit:
        # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
        run: |
          git remote remove origin
          git remote add origin https://${{secrets.GH_PAT}}@github.com/${{github.repository}}.git
          git config --global user.email "contact@capact.io"
          git config --global user.name "Capact Bot"
      - name: Setup environment
        run: |
          . ./hack/ci/setup-env.sh
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Set up GoReleaser
        run: go install github.com/goreleaser/goreleaser@v1.1.0
      - name: Set up GCS
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCS_CREDS }}
          export_default_credentials: true
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push release commits and tag
        env:
          RELEASE_VERSION: "${{ github.event.inputs.version }}"
        run: ./hack/make-release.sh
      - name: Run GoReleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make release-binaries
      - name: Generate release notes
        run: |
          npm install -g github-release-notes
          gren release -d -T "${{ secrets.GITHUB_TOKEN }}" --tags "v${{ github.event.inputs.version }}" --override
      - name: Release Helm charts
        run: make release-charts
