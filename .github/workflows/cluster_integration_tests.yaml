name: periodic-cluster-integration-tests
# on:
#   schedule:
#   - cron: '0 */2 * * *'

on:
  push:
    paths:
      - "**.go"
      - "**.graphql"
      - ".github/workflows/**"
      - "**.sh"
      - "**.yaml"
      - "Makefile"
    branches:
      - "devops*"

jobs:
  integration-tests:
    name: Cluster integration tests
    runs-on: ubuntu-latest

    steps:    
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup environment
        run: |
          . ./hack/ci/setup-env.sh
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          export_default_credentials: true
          service_account_key: ${{ secrets.GKE_CREDS }}
      - name: Get cluster credentials
        run: | 
          gcloud config set project ${PROJECT_ID}
          gcloud container clusters get-credentials ${TF_VAR_cluster_name} --zone=${TF_VAR_region}       
      - name: Network enable
        run: | 
          sudo snap install yq
          IP_ADDED_JOB=$(curl ${GET_IP_SERVICE})
          echo "export IP_ADDED_JOB=${IP_ADDED_JOB}" >job_ip.sh
          AUTHORIZED=$(gcloud container clusters describe ${TF_VAR_cluster_name} --zone ${TF_VAR_region} |yq r - 'masterAuthorizedNetworksConfig.cidrBlocks[*].cidrBlock')
          AUTHORIZED=$(echo ${AUTHORIZED} | tr ' ' ',' | sed 's/^,//g;s/ //g')
          echo IP_ADDED_JOB
          echo ${IP_ADDED_JOB}
          AUTHORIZED=$(printf "%s,%s/32" "${AUTHORIZED}" "${IP_ADDED_JOB}") |tr -d ^,
          echo AUTHORIZED
          echo ${AUTHORIZED}
          exit
          gcloud container clusters update ${TF_VAR_cluster_name} --zone ${TF_VAR_region} --enable-master-authorized-networks \
          --master-authorized-networks ${AUTHORIZED}
  #     - name: Save job ip
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: job_ip
  #         path: job_ip.sh
  #     - name: Test releases
  #       run: | 
  #         SERVICE=voltron
  #         for SERVICE in ${SERVICES}
  #         do  
  #           helm test ${SERVICE} --namespace=${NAMESPACE} --timeout=${HELM_TEST_TIMEOUT} --logs
  #         done


  # network-cleanup:
  #   name: Network access cleanup
  #   runs-on: ubuntu-latest
  #   if: always()
  #   needs: [ integration-tests ]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         service_account_key: ${{ secrets.GKE_CREDS }}
  #         export_default_credentials: true
  #     - name: Setup environment
  #       run: |
  #         . ./hack/ci/setup-env.sh
  #     - name: Download job ip
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: job_ip
  #     - name: Network cleanup
  #       run: | 
  #         . job_ip/job_ip.sh
  #         sudo snap install yq
  #         gcloud config set project ${PROJECT_ID}
  #         AUTHORIZED=$(gcloud container clusters describe ${TF_VAR_cluster_name} --zone ${TF_VAR_region} \
  #         |yq r - 'masterAuthorizedNetworksConfig.cidrBlocks[*].cidrBlock' |grep -v ${IP_ADDED_JOB}) || true
  #         AUTHORIZED=$(echo ${AUTHORIZED} | tr ' ' ',' | sed 's/^,//g;s/ //g') || true
  #         if [ -z ${AUTHORIZED} ]
  #         then
  #           gcloud container clusters update ${TF_VAR_cluster_name} --zone ${TF_VAR_region} --no-enable-master-authorized-networks
  #           gcloud container clusters update ${TF_VAR_cluster_name} --zone ${TF_VAR_region} --enable-master-authorized-networks
  #         else
  #           gcloud container clusters update ${TF_VAR_cluster_name} --zone ${TF_VAR_region} --enable-master-authorized-networks \
  #         --master-authorized-networks ${AUTHORIZED}
  #         fi
