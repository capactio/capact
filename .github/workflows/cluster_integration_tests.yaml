name: periodiccluster-integration-tests
on:
  schedule:
  - cron:  '* 9,21 * * *'

jobs:
  integration-tests:
    name: Cluster integration tests
    runs-on: ubuntu-latest

    steps:    
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Setup env
        run: |
          . ./env_setup.sh

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          export_default_credentials: true
          service_account_key: ${{ secrets.GKE_CREDS }}

      - name: Get cluster credentials
        run: | 
          gcloud config set project ${PROJECT_ID}
          gcloud container clusters get-credentials ${TF_VAR_cluster_name} --zone=${TF_VAR_region}
          
      - name: Network enable
        run: | 
          sudo snap install yq
          AUTHORIZED=$(gcloud container clusters describe ${TF_VAR_cluster_name} --zone ${TF_VAR_region} |yq r - 'masterAuthorizedNetworksConfig.cidrBlocks[*].cidrBlock')
          AUTHORIZED=$(echo ${AUTHORIZED} | tr ' ' ',' | sed 's/^,//g;s/ //g')
          AUTHORIZED=$(printf "%s,%s/32" "${AUTHORIZED}" $(curl ${GET_IP_SERVICE}))
          gcloud container clusters update ${TF_VAR_cluster_name} --zone ${TF_VAR_region} --enable-master-authorized-networks \
          --master-authorized-networks ${AUTHORIZED}

      - name: Test releases
        run: | 
          for SERVICE in ${SERVICES}
          do  
            helm test ${SERVICE} --namespace=${NAMESPACE} --timeout=${HELM_TEST_TIMEOUT} --logs
          done


          


          


#   #         # list authorized networks



#   # #     - name: Run unit tests
#   # #       run: make test-unit

#   # #     # - name: Run generation
#   # #     #   run: make test-generated
#   # #     #   env:
#   # #     #     SKIP_DEPS_INSTALLATION: false
        
#   # #     - name: Build & push image
#   # #       run: |
#   # #         gcloud auth configure-docker --project ${PROJECT_ID} -q
#   # #         for APP in ${APPS}
#   # #         do  
#   # #           echo ${APP} 
#   # #           make build-app-image-${APP} >build_${APP}.log 2>&1 \
#   # #           && make push-app-image-${APP} >push_${APP}.log 2>&1 &
#   # #         done
#   # #         wait
#   # #         cat build_*.log
#   # #         cat push_*.log

#   # #     - name: Archive build images log
#   # #       uses: actions/upload-artifact@v2
#   # #       with:
#   # #         name: docker-logs
#   # #         path: ./*.log

#   # # integration-tests:
#   # #   name: Integration tests
#   # #   runs-on: ubuntu-latest
#   # #   needs: build-image     
#   # #   steps:    
#   # #     - name: Checkout code
#   # #       uses: actions/checkout@v2
#   # #     - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#   # #       with:
#   # #         service_account_key: ${{ secrets.GCR_CREDS }}
#   # #         export_default_credentials: true

#   # #     - name: Setup env
#   # #       run: |
#   # #         . ./env_setup.sh

#   # #     - name: Setup golang
#   # #       uses: actions/setup-go@v2
#   # #       with:
#   # #         go-version: ${{env.GO_VERSION}}

#   # #     - name: Run unit tests
#   # #       run: | 
#   # #         make test-integration
#   # #       env:
#   # #         SKIP_DEPS_INSTALLATION: false

