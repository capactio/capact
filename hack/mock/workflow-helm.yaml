apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: jira-deployment
spec:
  entrypoint: jira
  templates:
  - name: jira
    steps:
    - - name: generate-artifacts
        template: fetch-type-instances
    - - name: postgresql-install
        template: postgresql-install
        arguments:
          artifacts:
          - name: postgresql-helm
            from: "{{steps.generate-artifacts.outputs.artifacts.postgresql-helm}}"
    - - name: produce-helm-values
        template: produce-helm-values
        arguments:
          artifacts:
          - name: postgres
            from: "{{steps.postgresql-install.outputs.artifacts.additional}}"
    - - name: jira-install
        template: jira-install
        arguments:
          artifacts:
          - name: jira-helm
            from: "{{steps.generate-artifacts.outputs.artifacts.jira-helm}}"
    - - name: upload-type-instances
        template: upload-type-instances
        arguments:
          artifacts:
          - name: jira-output
            from: "{{steps.jira-install.outputs.artifacts.additional}}"

  - name: fetch-type-instances
    container:
      image: gcr.io/projectvoltron/pr/voltron-helper:PR-136
      imagePullPolicy: Always
    outputs:
      artifacts:
      - name: postgresql-helm
        path: /out/postgresql-input.yaml
      - name: jira-helm
        path: /out/jira-helm-input.yaml

  - name: postgresql-install
    container:
      image: gcr.io/projectvoltron/pr/helm-runner:PR-62
      env:
        - name: RUNNER_INPUT_PATH
          value: "/input.yaml"
        - name: RUNNER_LOGGER_DEV_MODE
          value: "true"
    inputs:
      artifacts:
      - name: postgresql-helm
        path: /input.yaml
    outputs:
      artifacts:
      - name: release
        path: /release.yaml
      - name: additional
        path: /additional.yaml

  - name: produce-helm-values
    inputs:
      artifacts:
      - name: postgres
        path: "/input.yaml"
    container:
      image: gcr.io/projectvoltron/pr/voltron-helper:PR-136
      command: ["/produce-helm-cloud-values.sh"]
      args:
          - --input
          - "postgresql={{`{{ inputs.artifacts.postgresql.path }}`}}"
          - --input
          - "params={{ inputParametersToArtifact.path }}"
          - --output-path
          - "{{`{{workflow.outputs.artifacts.postgresql}}`}}"
          - --output-format
          - >
            image:
              tag: {{ .Context.appVersion }}
            postgresql:
              enabled: false # do not install Postgres along the Jira installation
            databaseConnection:
              host: {{`{{ .postgresql.host }}`}}
              port: {{`{{ .postgresql.port }}`}}
              user: {{`{{ .postgresql.superuser.username }}`}}
              password: {{`{{ .postgresql.superuser.password }}`}}
              database: {{`{{ .postgresql.defaultDBName }}`}}
            ingress:
              enabled: true
              ingress:
                hosts:
                  - host: {{`{{ .params.host }}`}}
                    paths: []

  - name: jira-install
    container:
      image: gcr.io/projectvoltron/pr/helm-runner:PR-62
      env:
        - name: RUNNER_INPUT_PATH
          value: "/input.yaml"
        - name: RUNNER_LOGGER_DEV_MODE
          value: "true"
    inputs:
      artifacts:
      - name: jira-helm
        path: /input.yaml
    outputs:
      artifacts:
      - name: release
        path: /release.yaml
      - name: additional
        path: /additional.yaml

  - name: upload-type-instances
    container:
      image: gcr.io/projectvoltron/pr/voltron-helper:PR-136
      command: ["/upload-type-instances.sh"]
      args: ["helm"]
    inputs:
      artifacts:
      - name: jira-output
        path: /input.yaml
