ocfVersion: 0.0.1
revision: 0.1.0
kind: Type
metadata:
  name: instance
  prefix: cap.type.aws.elasticsearch
  displayName: install-input
  description: Defined the input parameters for provisioning AWS Elasticsearch domain
  documentationURL: https://aws.amazon.com/elasticsearch-service/
  supportURL: https://aws.amazon.com/elasticsearch-service/
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
      url: https://capact.io
  attributes:
    cap.attribute.cloud.provider.aws:
      revision: 0.1.0
spec:
  jsonSchema:
    value: |-
      {
        "$schema": "http://json-schema.org/draft-07/schema",
        "type": "object",
        "required": [
          "region",
          "domain_name"
        ],
        "properties": {
          "region": {
            "$id": "#/properties/region",
            "type": "string",
            "description": "AWS region"
          },
          "domain_name": {
            "$id": "#/properties/domain_name",
            "type": "string",
            "description": "Name of the domain"
          },
          "elasticsearch_version": {
            "$id": "#/properties/elasticsearch_version",
            "type": "string",
            "description": "The version of Elasticsearch to deploy."
          },
          "access_policies": {
            "$id": "#/properties/access_policies",
            "type": "string",
            "description": "IAM policy document specifying the access policies for the domain"
          },
          "advanced_security_options": {
            "$id": "#/properties/advanced_security_options",
            "type": "string",
            "description": "Options for fine-grained access control"
          },
          "advanced_security_options_enabled": {
            "$id": "#/properties/advanced_security_options_enabled",
            "type": "boolean",
            "description": "Whether advanced security is enabled (Forces new resource)"
          },
          "advanced_security_options_internal_user_database_enabled": {
            "$id": "#/properties/advanced_security_options_internal_user_database_enabled",
            "type": "boolean",
            "description": "Whether the internal user database is enabled. If not set, defaults to false by the AWS API."
          },
          "advanced_security_options_master_user_arn": {
            "$id": "#/properties/advanced_security_options_master_user_arn",
            "type": "string",
            "description": "ARN for the master user. Only specify if `internal_user_database_enabled` is not set or set to `false`)"
          },
          "advanced_security_options_master_user_username": {
            "$id": "#/properties/advanced_security_options_master_user_username",
            "type": "string",
            "description": "The master user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internal_user_database_enabled` is set to `true`."
          },
          "advanced_security_options_master_user_password": {
            "$id": "#/properties/advanced_security_options_master_user_password",
            "type": "string",
            "description": "The master user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internal_user_database_enabled` is set to `true`."
          },
          "domain_endpoint_options": {
            "$id": "#/properties/domain_endpoint_options",
            "type": "string",
            "description": "Domain endpoint HTTP(S) related options."
          },
          "domain_endpoint_options_enforce_https": {
            "$id": "#/properties/domain_endpoint_options_enforce_https",
            "type": "boolean",
            "description": "Whether or not to require HTTPS"
          },
          "domain_endpoint_options_tls_security_policy": {
            "$id": "#/properties/domain_endpoint_options_tls_security_policy",
            "type": "string",
            "description": "The name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values: `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`"
          },
          "domain_endpoint_options_custom_endpoint_enabled": {
            "$id": "#/properties/domain_endpoint_options_custom_endpoint_enabled",
            "type": "boolean",
            "description": "Whether to enable custom endpoint for the Elasticsearch domain"
          },
          "domain_endpoint_options_custom_endpoint": {
            "$id": "#/properties/domain_endpoint_options_custom_endpoint",
            "type": "string",
            "description": "Fully qualified domain for your custom endpoint"
          },
          "domain_endpoint_options_custom_endpoint_certificate_arn": {
            "$id": "#/properties/domain_endpoint_options_custom_endpoint_certificate_arn",
            "type": "string",
            "description": "ACM certificate ARN for your custom endpoint"
          },
          "advanced_options": {
            "$id": "#/properties/advanced_options",
            "type": "object",
            "description": "Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing Terraform to want to recreate your Elasticsearch domain on every apply"
          },
          "ebs_options": {
            "$id": "#/properties/ebs_options",
            "type": "object",
            "description": "EBS related options, may be required based on chosen instance size"
          },
          "ebs_enabled": {
            "$id": "#/properties/ebs_enabled",
            "type": "boolean",
            "description": "Whether EBS volumes are attached to data nodes in the domain"
          },
          "ebs_options_volume_type": {
            "$id": "#/properties/ebs_options_volume_type",
            "type": "string",
            "description": "The type of EBS volumes attached to data nodes"
          },
          "ebs_options_volume_size": {
            "$id": "#/properties/ebs_options_volume_size",
            "type": "string",
            "description": "The size of EBS volumes attached to data nodes (in GB). Required if ebs_enabled is set to true"
          },
          "ebs_options_iops": {
            "$id": "#/properties/ebs_options_iops",
            "type": "string",
            "description": "The baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the Provisioned IOPS EBS volume type"
          },
          "encrypt_at_rest": {
            "$id": "#/properties/encrypt_at_rest",
            "type": "object",
            "description": "Encrypt at rest options. Only available for certain instance types"
          },
          "encrypt_at_rest_enabled": {
            "$id": "#/properties/encrypt_at_rest_enabled",
            "type": "boolean",
            "description": "Whether to enable encryption at rest"
          },
          "encrypt_at_rest_kms_key_id": {
            "$id": "#/properties/encrypt_at_rest_kms_key_id",
            "type": "string",
            "description": "The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the aws/es service KMS key"
          },
          "node_to_node_encryption": {
            "$id": "#/properties/node_to_node_encryption",
            "type": "object",
            "description": "Node-to-node encryption options"
          },
          "node_to_node_encryption_enabled": {
            "$id": "#/properties/node_to_node_encryption_enabled",
            "type": "boolean",
            "description": "Whether to enable node-to-node encryption"
          },
          "cluster_config": {
            "$id": "#/properties/cluster_config",
            "type": "object",
            "description": "Cluster configuration of the domain"
          },
          "cluster_config_instance_type": {
            "$id": "#/properties/cluster_config_instance_type",
            "type": "string",
            "description": "Instance type of data nodes in the cluster"
          },
          "cluster_config_instance_count": {
            "$id": "#/properties/cluster_config_instance_count",
            "type": "string",
            "description": "Number of instances in the cluster"
          },
          "cluster_config_dedicated_master_enabled": {
            "$id": "#/properties/cluster_config_dedicated_master_enabled",
            "type": "boolean",
            "description": "Indicates whether dedicated master nodes are enabled for the cluster"
          },
          "cluster_config_dedicated_master_type": {
            "$id": "#/properties/cluster_config_dedicated_master_type",
            "type": "string",
            "description": "Instance type of the dedicated master nodes in the cluster"
          },
          "cluster_config_availability_zone_count": {
            "$id": "#/properties/cluster_config_availability_zone_count",
            "type": "string",
            "description": "Number of Availability Zones for the domain to use with"
          },
          "cluster_config_zone_awareness_enabled": {
            "$id": "#/properties/cluster_config_zone_awareness_enabled",
            "type": "boolean",
            "description": "Indicates whether zone awareness is enabled. To enable awareness with three Availability Zones"
          },
          "cluster_config_warm_enabled": {
            "$id": "#/properties/cluster_config_warm_enabled",
            "type": "boolean",
            "description": "Indicates whether to enable warm storage"
          },
          "cluster_config_warm_count": {
            "$id": "#/properties/cluster_config_warm_count",
            "type": "string",
            "description": "The number of warm nodes in the cluster"
          },
          "cluster_config_warm_type": {
            "$id": "#/properties/cluster_config_warm_type",
            "type": "string",
            "description": "The instance type for the Elasticsearch cluster's warm nodes"
          },
          "snapshot_options": {
            "$id": "#/properties/snapshot_options",
            "type": "object",
            "description": "Snapshot related options"
          },
          "snapshot_options_automated_snapshot_start_hour": {
            "$id": "#/properties/snapshot_options_automated_snapshot_start_hour",
            "type": "string",
            "description": "Hour during which the service takes an automated daily snapshot of the indices in the domain"
          },
          "vpc_options": {
            "$id": "#/properties/vpc_options",
            "type": "object",
            "description": "VPC related options, see below. Adding or removing this configuration forces a new resource"
          },
          "vpc_options_security_group_ids": {
            "$id": "#/properties/vpc_options_security_group_ids",
            "type": "string",
            "description": "List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used"
          },
          "vpc_options_subnet_ids": {
            "$id": "#/properties/vpc_options_subnet_ids",
            "type": "string",
            "description": "List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in"
          },
          "log_publishing_options": {
            "$id": "#/properties/log_publishing_options",
            "type": "object",
            "description": "Options for publishing slow logs to CloudWatch Logs"
          },
          "log_publishing_options_log_type": {
            "$id": "#/properties/log_publishing_options_log_type",
            "type": "string",
            "description": "A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS"
          },
          "log_publishing_options_cloudwatch_log_group_arn": {
            "$id": "#/properties/log_publishing_options_cloudwatch_log_group_arn",
            "type": "string",
            "description": "iARN of the Cloudwatch log group to which log needs to be published"
          },
          "log_publishing_options_enabled": {
            "$id": "#/properties/log_publishing_options_enabled",
            "type": "boolean",
            "description": "Specifies whether given log publishing option is enabled or not"
          },
          "log_publishing_options_retention": {
            "$id": "#/properties/log_publishing_options_retention",
            "type": "string",
            "description": "Retention in days for the created Cloudwatch log group"
          },
          "cognito_options": {
            "$id": "#/properties/cognito_options",
            "type": "object",
            "description": "Options for Amazon Cognito Authentication for Kibana"
          },
          "cognito_options_enabled": {
            "$id": "#/properties/cognito_options_enabled",
            "type": "boolean",
            "description": "Specifies whether Amazon Cognito authentication with Kibana is enabled or not"
          },
          "cognito_options_user_pool_id": {
            "$id": "#/properties/cognito_options_user_pool_id",
            "type": "string",
            "description": "ID of the Cognito User Pool to use"
          },
          "cognito_options_identity_pool_id": {
            "$id": "#/properties/cognito_options_identity_pool_id",
            "type": "string",
            "description": "ID of the Cognito Identity Pool to use"
          },
          "cognito_options_role_arn": {
            "$id": "#/properties/cognito_options_role_arn",
            "type": "string",
            "description": "ARN of the IAM role that has the AmazonESCognitoAccess policy attached"
          },
          "tags": {
            "$id": "#/properties/tags",
            "type": "object",
            "description": "A mapping of tags to assign to the resource"
          },
          "timeouts": {
            "$id": "#/properties/timeouts",
            "type": "object",
            "description": "Timeouts map."
          },
          "timeouts_update": {
            "$id": "#/properties/timeouts_update",
            "type": "string",
            "description": "How long to wait for updates."
          },
          "create_service_link_role": {
            "$id": "#/properties/create_service_link_role",
            "type": "boolean",
            "description": "Create service link role for AWS Elasticsearch Service"
          }
        }
      }

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
