ocfVersion: 0.0.1
revision: 0.1.0
kind: Type
metadata:
  name: install-input
  prefix: cap.type.rocketchat.helm
  displayName: Rocket.Chat Helm chart installation input
  description: Defines installation parameters for Rocket.Chat Helm chart
  documentationURL: https://docs.rocket.chat/
  supportURL: https://rocket.chat/
  iconURL: https://528977-1685022-raikfcquaxqncofqfm.stackpathdns.com/assets/img/header/logo.svg
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
      url: https://capact.io

spec:
  jsonSchema:
    value: |-
      {
        "$schema": "http://json-schema.org/draft-07/schema",
        "type": "object",
        "title": "The schema for Rocketchat configuration",
        "required": [],
        "properties": {
          "image": {
            "$id": "#/properties/image",
            "type": "object",
            "title": "The image configuration",
            "required": [],
            "properties": {
              "repository": {
                    "$id": "#/properties/image/properties/repository",
                    "type": "string",
                    "title": "The image repositor",
                    "default": "docker.io/rocketchat/rocket.chat",
                },
                "tag": {
                    "$id": "#/properties/image/properties/tag",
                    "type": "string",
                    "title": "The tag schema",
                    "default": "3.13.1",
                },
                "pullPolicy": {
                    "$id": "#/properties/image/properties/pullPolicy",
                    "type": "string",
                    "title": "The pullPolicy schema",
                    "default": "IfNotPresent",
                }
            },
            "additionalProperties": false
        },
        "replicaCount": {
            "$id": "#/properties/replicaCount",
            "type": "integer",
            "title": "The number of replicas",
            "default": 3,
        },
        "minAvailable": {
            "$id": "#/properties/minAvailable",
            "type": "integer",
            "title": "The minimum available Pods",
            "default": 1,
        },
        "podAntiAffinity": {
            "$id": "#/properties/podAntiAffinity",
            "type": "string",
            "title": "The podAntiAffinity configuration",
            "description": "PodAntiAffinity, soft or hard",
            "default": "soft"
        },
        "podAntiAffinityTopologyKey": {
            "$id": "#/properties/podAntiAffinityTopologyKey",
            "type": "string",
            "title": "The podAntiAffinityTopologyKey configuration",
            "default": "kubernetes.io/hostname"
        },
        "affinity": {
            "$id": "#/properties/affinity",
            "type": "object",
            "title": "The affinity configuration",
            "default": {},
            "required": [],
            "additionalProperties": true
        },
        "persistence": {
            "$id": "#/properties/persistence",
            "type": "object",
            "title": "The persistence schema",
            "description": "An explanation about the purpose of this instance.",
            "default": {},
            "required": [],
            "properties": {
                "enabled": {
                    "$id": "#/properties/persistence/properties/enabled",
                    "type": "boolean",
                    "title": "Enabling persistence",
                    "description": "Persistence is used for storing uploads",
                    "default": false
                },
                "accessMode": {
                    "$id": "#/properties/persistence/properties/accessMode",
                    "type": "string",
                    "title": "The accessMode",
                    "default": "ReadWriteOnce"
                },
                "size": {
                    "$id": "#/properties/persistence/properties/size",
                    "type": "string",
                    "title": "The size",
                    "default": "8Gi"
                }
            },
            "additionalProperties": false
        },
        "securityContext": {
            "$id": "#/properties/securityContext",
            "type": "object",
            "title": "The securityContext configuration",
            "default": {},
            "required": [],
            "properties": {
                "enabled": {
                    "$id": "#/properties/securityContext/properties/enabled",
                    "type": "boolean",
                    "title": "Enabling securityContext",
                    "default": true
                },
                "runAsUser": {
                    "$id": "#/properties/securityContext/properties/runAsUser",
                    "type": "integer",
                    "title": "The runAsUser schema",
                    "description": "An explanation about the purpose of this instance.",
                    "default": 999
                },
                "fsGroup": {
                    "$id": "#/properties/securityContext/properties/fsGroup",
                    "type": "integer",
                    "title": "The fsGroup schema",
                    "description": "An explanation about the purpose of this instance.",
                    "default": 999
                }
            },
            "additionalProperties": false
        },
        "serviceAccount": {
            "$id": "#/properties/serviceAccount",
            "type": "object",
            "title": "The serviceAccount configuration",
            "default": {},
            "required": [],
            "properties": {
                "create": {
                    "$id": "#/properties/serviceAccount/properties/create",
                    "type": "boolean",
                    "title": "Create serviceAccount",
                    "default": true
                },
                "name": {
                    "$id": "#/properties/serviceAccount/properties/name",
                    "type": "string",
                    "title": "The name of serviceAccount",
                    "default": ""
                }
            },
            "additionalProperties": false
        },
        "ingress": {
            "$id": "#/properties/ingress",
            "type": "object",
            "title": "The ingress configuration",
            "default": {},
            "required": [],
            "properties": {
                "enabled": {
                    "$id": "#/properties/ingress/properties/enabled",
                    "type": "boolean",
                    "title": "Enable ingress",
                    "default": true,
                }
            }
        },
        "service": {
            "$id": "#/properties/service",
            "type": "object",
            "title": "The service configuration",
            "default": {},
            "required": [],
            "properties": {
                "annotations": {
                    "$id": "#/properties/service/properties/annotations",
                    "type": "object",
                    "title": "Service annotations",
                    "default": {},
                    "additionalProperties": true
                },
                "labels": {
                    "$id": "#/properties/service/properties/labels",
                    "type": "object",
                    "title": "Service labels",
                    "default": {},
                    "required": [],
                    "additionalProperties": true
                },
                "type": {
                    "$id": "#/properties/service/properties/type",
                    "type": "string",
                    "title": "Service type",
                    "default": "ClusterIP"
                },
                "port": {
                    "$id": "#/properties/service/properties/port",
                    "type": "integer",
                    "title": "Service port",
                    "default": 80
                }
            },
            "additionalProperties": false
        },
        "podLabels": {
            "$id": "#/properties/podLabels",
            "type": "object",
            "title": "Pod labels",
            "default": {},
            "required": [],
            "additionalProperties": true
        },
        "podAnnotations": {
            "$id": "#/properties/podAnnotations",
            "type": "object",
            "title": "Pod annotations",
            "default": {},
            "required": [],
            "additionalProperties": true
        },
        "livenessProbe": {
            "$id": "#/properties/livenessProbe",
            "type": "object",
            "title": "livenessProbe configuration",
            "default": {},
            "required": [],
            "properties": {
                "enabled": {
                    "$id": "#/properties/livenessProbe/properties/enabled",
                    "type": "boolean",
                    "title": "Enabling livenessProbe",
                    "description": "An explanation about the purpose of this instance.",
                    "default": true
                },
                "initialDelaySeconds": {
                    "$id": "#/properties/livenessProbe/properties/initialDelaySeconds",
                    "type": "integer",
                    "title": "initialDelaySeconds",
                    "default": 60
                },
                "periodSeconds": {
                    "$id": "#/properties/livenessProbe/properties/periodSeconds",
                    "type": "integer",
                    "title": "periodSeconds",
                    "default": 15
                },
                "timeoutSeconds": {
                    "$id": "#/properties/livenessProbe/properties/timeoutSeconds",
                    "type": "integer",
                    "title": "timeoutSeconds",
                    "default": 5
                },
                "failureThreshold": {
                    "$id": "#/properties/livenessProbe/properties/failureThreshold",
                    "type": "integer",
                    "title": "failureThreshold",
                    "default": 3,
                },
                "successThreshold": {
                    "$id": "#/properties/livenessProbe/properties/successThreshold",
                    "type": "integer",
                    "title": "successThreshold",
                    "default": 1
                }
            },
            "additionalProperties": false
        },
        "readinessProbe": {
            "$id": "#/properties/readinessProbe",
            "type": "object",
            "title": "readinessProbe configuration",
            "default": {},
            "required": [],
            "properties": {
                "enabled": {
                    "$id": "#/properties/readinessProbe/properties/enabled",
                    "type": "boolean",
                    "title": "Enabling readinessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "$id": "#/properties/readinessProbe/properties/initialDelaySeconds",
                    "type": "integer",
                    "title": "initialDelaySeconds",
                    "default": 10
                },
                "periodSeconds": {
                    "$id": "#/properties/readinessProbe/properties/periodSeconds",
                    "type": "integer",
                    "title": "periodSeconds",
                    "default": 15
                },
                "timeoutSeconds": {
                    "$id": "#/properties/readinessProbe/properties/timeoutSeconds",
                    "type": "integer",
                    "title": "timeoutSeconds",
                    "default": 5
                },
                "failureThreshold": {
                    "$id": "#/properties/readinessProbe/properties/failureThreshold",
                    "type": "integer",
                    "title": "failureThreshold",
                    "default": 3
                },
                "successThreshold": {
                    "$id": "#/properties/readinessProbe/properties/successThreshold",
                    "type": "integer",
                    "title": "successThreshold",
                    "default": 1
                }
            },
            "additionalProperties": true
          }
        },
      "additionalProperties": true
      }

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
