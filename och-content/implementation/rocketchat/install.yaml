ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.rocketchat.rocketchat
  name: install
  displayName: Install Rocket.Chat
  description: Action which installs Rocket.Chat via Helm chart
  documentationURL: https://github.com/javimox/helm-charts/tree/master/charts/rocketchat-server
  supportURL: https://docs.rocket.chat/installation/automation-tools/helm-chart
  license:
    name: "Apache 2.0"
  maintainers:
    - email: team-dev@projectvoltron.dev
      name: Voltron Dev Team
      url: https://projectvoltron.dev

spec:
  appVersion: "3.6.x"

  # TODO: Support external MongoDB

  outputTypeInstanceRelations:
    rocketchat-config:
      uses:
        - rocketchat-helm-release

  implements:
    - path: cap.interface.productivity.rocketchat.install
      revision: 0.1.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0

  imports:
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.runner.helm
      alias: helm
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.templating.jinja2
      alias: jinja2
      methods:
        - name: template
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: rocketchat-install
        templates:
          - name: rocketchat-install
            inputs:
              artifacts:
                - name: input-parameters # Entrypoint template gets the user parameters in 'input-parameters' artifacts.
            outputs:
              artifacts:
                - name: rocketchat-config
                  from: "{{steps.helm-run.outputs.artifacts.additional}}"
            steps:
              - - name: create-helm-args
                  voltron-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: template
                        raw:
                          # TODO: Migrate to https://github.com/RocketChat/helm-charts
                          # once https://github.com/RocketChat/helm-charts/pull/3 is merged
                          data: |
                            command: "install"
                            generateName: true
                            chart:
                              name: "rocketchat"
                              repo: "https://charts.helm.sh/stable"
                            values:
                              image:
                                pullPolicy: Always
                              mongodb:
                                mongodbUsername: rocketchat
                                mongodbPassword: <@ random_word() @>
                                mongodbDatabase: rocketchat
                                mongodbRootPassword: <@ random_word() @>
                              ingress:
                                enabled: true
                                annotations:
                                  acmechallengetype: http01
                                  cert-manager.io/cluster-issuer: letsencrypt
                                  kubernetes.io/ingress.class: nginx
                                  kubernetes.io/tls-acme: "true"
                                tls:
                                  - secretName: rocketchat-server-tls-<@ random_word(length=5) @>
                                    hosts:
                                      - <@ host @>
                                hosts:
                                - host: <@ host @>
                                  paths: ['/']
                            output:
                              goTemplate:
                                host: "{{ (index .Values.ingress.hosts 0).host }}"
                                version: "{{ .Values.image.tag }}"
                      - name: configuration
                        raw:
                          data: |

              - - name: helm-run
                  voltron-action: helm.run
                  voltron-outputTypeInstances: # The typeInstanceOutput defines which artifacts are output TypeInstances
                    - name: rocketchat-config
                      from: additional
                    - name: rocketchat-helm-release
                      from: helm-release
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.create-helm-args.outputs.artifacts.render}}"
                      - name: runner-context
                        from: "{{workflow.outputs.artifacts.runner-context}}"

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
