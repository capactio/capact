ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.bitnami.mongodb
  name: install
  displayName: Install MongoDB database
  description: Action which installs MongoDB database via Helm chart
  documentationURL: https://github.com/bitnami/charts
  supportURL: https://bitnami.com
  license:
    name: "Apache 2.0"
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
      url: https://capact.io

spec:
  appVersion: "4"

  additionalInput:
    parameters:
      typeRef:
        path: cap.type.bitnami.mongodb.install-input
        revision: 0.1.0

  outputTypeInstanceRelations:
    mongodb:
      uses:
        - mongo-helm-release

  implements:
    - path: cap.interface.database.mongodb.install
      revision: 0.1.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0

  imports:
    - interfaceGroupPath: cap.interface.runner.helm
      alias: helm
      methods:
        - name: install
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.templating.jinja2
      alias: jinja2
      methods:
        - name: template
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: mongo-install
        templates:
          - name: mongo-install
            inputs:
              artifacts:
                - name: input-parameters # Entrypoint template gets the user parameters in 'input-parameters' artifacts.
                - name: additional-parameters
                  optional: true
            outputs:
              artifacts:
                - name: mongodb
                  from: "{{steps.helm-install.outputs.artifacts.additional}}"
            steps:
              - - name: fill-default-input
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: configuration
                        raw:
                          data: |
                            prefix: input

                      - name: template
                        raw:
                          data: |
                            user:
                              username: "<@ input.user.username | default('mongo') @>"
                              password: "<@ input.user.password | default(random_word(length=16)) @>"
                            defaultDBName: "<@ input.defaultDBName | default('mongo') @>"
                            rootPassword: "<@ input.rootPassword | default(random_word(length=16)) @>"
                            replicas: <@ input.replicas | default(3) @>
                            replicaSetName: "<@ input.replicaSetName | default('rs0') @>"
                            replicaSetKey: "<@ input.replicaSetKey | default(random_word(length=16)) @>"

              - - name: create-helm-args
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.additional-parameters}}"
                      - name: configuration
                        raw:
                          data: |
                            prefix: additionalinput

                      - name: template
                        raw:
                          data: |
                            generateName: true
                            chart:
                              name: "mongodb"
                              repo: "https://charts.bitnami.com/bitnami"
                              version: 10.3.1
                            values:
                              image:
                                registry: <@ additionalinput.image.registry | default("docker.io") @>
                                repository: <@ additionalinput.image.repository | default("bitnami/mongodb") @>
                                tag: <@ additionalinput.image.tag | default("4.4.2-debian-10-r27") @>
                                pullPolicy: <@ additionalinput.image.pullPolicy | default("IfNotPresent") @>
                                debug: <@ additionalinput.image.debug | default(false) | tojson @>

                              clusterDomain: <@ additionalinput.clusterDomain | default("cluster.local") @>
                              architecture: <@ additionalinput.architecture | default("replicaset") @>
                              useStatefulSet: <@ additionalinput.useStatefulSet | default(false) | tojson @>

                              auth:
                                enabled: true
                                username: <@ input.user.username @>
                                password: <@ input.user.password @>
                                database: <@ input.defaultDBName @>
                                rootPassword: <@ input.rootPassword @>
                                replicaSetKey: "<@ input.replicaSetKey @>"

                              tls:
                                enabled: <@ additionalinput.tls.enabled | default(false) | tojson @>
                                caCert: "<@ additionalinput.tls.caCert | default('') @>"
                                caKey: "<@ additionalinput.tls.caKey | default('') @>"
                                image:
                                  registry: <@ additionalinput.tls.image.registry | default("docker.io") @>
                                  repository: <@ additionalinput.tls.image.repository | default("bitnami/nginx") @>
                                  tag: <@ additionalinput.tls.image.tag | default("1.19.5-debian-10-r19") @>
                                  pullPolicy: <@ additionalinput.tls.image.pullPolicy | default("IfNotPresent") @>

                              replicaSetName: <@ input.replicaSetName @>
                              replicaSetHostnames: <@ additionalinput.replicaSetHostnames | default(true) | tojson @>
                              enableIPv6: <@ additionalinput.enableIPv6 | default(false) | tojson @>
                              directoryPerDB: <@ additionalinput.directoryPerDB | default(false) | tojson @>
                              systemLogVerbosity: <@ additionalinput.systemLogVerbosity | default(0) @>
                              disableSystemLog: <@ additionalinput.disableSystemLog | default(false) | tojson @>
                              configuration: "<@ additionalinput.configuration | default("") @>"
                              initdbScripts: <@ additionalinput.initdbScripts | default({}) @>
                              extraFlags: <@ additionalinput.extraFlags | default([]) @>
                              extraEnvVars: <@ additionalinput.extraEnvVars | default([]) @>
                              annotations: <@ additionalinput.annotations | default({}) @>
                              labels: <@ additionalinput.labels | default({}) @>
                              replicaCount: <@ input.replicas @>
                              strategyType: <@ additionalinput.strategyType | default("RollingUpdate") @>
                              podManagementPolicy: <@ additionalinput.podManagementPolicy | default("OrderedReady") @>
                              podAffinityPreset: "<@ additionalinput.podAffinityPreset | default("") @>"
                              podAntiAffinityPreset: "<@ additionalinput.podAntiAffinityPreset | default("soft") @>"
                              nodeAffinityPreset:
                                type: "<@ additionalinput.nodeAffinityPreset.type | default("") @>"
                                key: "<@ additionalinput.nodeAffinityPreset.key | default("") @>"
                                values: <@ additionalinput.nodeAffinityPreset.values | default([]) @>

                              affinity: <@ additionalinput.affinity | default({}) @>
                              nodeSelector: <@ additionalinput.nodeSelector | default({}) @>
                              tolerations: <@ additionalinput.tolerations | default([]) @>
                              podLabels: <@ additionalinput.podLabels | default({}) @>
                              podAnnotations: <@ additionalinput.podAnnotations | default({}) @>

                              podSecurityContext:
                                enabled: <@ additionalinput.podSecurityContext.enabled | default(true) | tojson @>
                                fsGroup: <@ additionalinput.podSecurityContext.fsGroup | default(1001) @>
                                sysctls: <@ additionalinput.podSecurityContext.sysctls | default([]) @>

                              containerSecurityContext:
                                enabled: <@ additionalinput.containerSecurityContext.enabled | default(true) | tojson @>
                                runAsUser: <@ additionalinput.containerSecurityContext.runAsUser | default(1001) @>
                                runAsNonRoot: <@ additionalinput.containerSecurityContext.runAsNonRoot | default(true) | tojson @>

                              resources:
                                limits:
                                  memory: <@ additionalinput.resources.limits.memory | default("2Gi") @>
                                  cpu: <@ additionalinput.resources.limits.cpu | default("2") @>
                                requests:
                                  memory: <@ additionalinput.resources.requests.memory | default("2Gi") @>
                                  cpu: <@ additionalinput.resources.requests.cpu | default("500m") @>

                              livenessProbe:
                                enabled: <@ additionalinput.livenessProbe.enabled | default(true) | tojson @>
                                initialDelaySeconds: <@ additionalinput.livenessProbe.initialDelaySeconds | default(30) @>
                                periodSeconds: <@ additionalinput.livenessProbe.periodSeconds | default(10) @>
                                timeoutSeconds: <@ additionalinput.livenessProbe.timeoutSeconds | default(5) @>
                                failureThreshold: <@ additionalinput.livenessProbe.failureThreshold | default(6) @>
                                successThreshold: <@ additionalinput.livenessProbe.successThreshold | default(1) @>

                              readinessProbe:
                                enabled: <@ additionalinput.readinessProbe.enabled | default(true) | tojson @>
                                initialDelaySeconds: <@ additionalinput.readinessProbe.initialDelaySeconds | default(5) @>
                                periodSeconds: <@ additionalinput.readinessProbe.periodSeconds | default(10) @>
                                timeoutSeconds: <@ additionalinput.readinessProbe.timeoutSeconds | default(5) @>
                                failureThreshold: <@ additionalinput.readinessProbe.failureThreshold | default(6) @>
                                successThreshold: <@ additionalinput.readinessProbe.successThreshold | default(1) @>

                              customLivenessProbe: <@ additionalinput.customLivenessProbe | default({}) @>
                              customReadinessProbe: <@ additionalinput.customReadinessProbe | default({}) @>
                              initContainers: <@ additionalinput.initContainers | default({}) @>
                              sidecars: <@ additionalinput.sidecars | default({}) @>
                              extraVolumeMounts: <@ additionalinput.extraVolumeMounts | default([]) @>
                              extraVolumes: <@ additionalinput.extraVolumes | default([]) @>

                              pdb:
                                create: <@ additionalinput.pdb.create | default(true) | tojson @>
                                minAvailable: <@ additionalinput.pdb.minAvailable | default(1) @>

                              persistence:
                                enabled: <@ additionalinput.persistence.enabled | default(true) | tojson @>
                                accessModes: <@ additionalinput.persistence.accessModes | default(["ReadWriteOnce"]) @>
                                size: <@ additionalinput.persistence.size | default("8Gi") @>
                                annotations: <@ additionalinput.persistence.annotations | default({}) @>
                                mountPath: <@ additionalinput.persistence.mountPath | default("/bitnami/mongodb") @>
                                subPath: <@ additionalinput.persistence.subPath | default("") @>

                              service:
                                type: <@ additionalinput.service.type | default("ClusterIP") @>
                                port: <@ additionalinput.service.port | default(27017) @>
                                portName: <@ additionalinput.service.portName | default("mongodb") @>
                                nodePort: <@ additionalinput.service.nodePort | default("") @>
                                externalIPs: <@ additionalinput.service.externalIPs | default([]) @>
                                loadBalancerSourceRanges: <@ additionalinput.service.loadBalancerSourceRanges | default([]) @>
                                annotations: <@ additionalinput.service.annotations | default({}) @>

                              externalAccess:
                                enabled: <@ additionalinput.externalAccess.enabled | default(false) | tojson @>
                                autoDiscovery:
                                  enabled: <@ additionalinput.externalAccess.autoDiscovery.enabled | default(false) | tojson @>
                                  image:
                                    registry: <@ additionalinput.externalAccess.autoDiscovery.image.registry | default("docker.io") @>
                                    repository: <@ additionalinput.externalAccess.autoDiscovery.image.repository | default("bitnami/kubectl") @>
                                    tag: <@ additionalinput.externalAccess.autoDiscovery.image.tag | default("1.18.13-debian-10-r5") @>
                                    pullPolicy: <@ additionalinput.externalAccess.autoDiscovery.image.pullPolicy | default("IfNotPresent") @>
                                    pullSecrets: <@ additionalinput.externalAccess.autoDiscovery.image.pullSecrets | default([]) @>
                                  resources:
                                    limits: <@ additionalinput.externalAccess.autoDiscovery.resources.limits | default({}) @>
                                    requests: <@ additionalinput.externalAccess.autoDiscovery.resources.requests | default({}) @>
                                service:
                                  type: <@ additionalinput.externalAccess.service.type | default("LoadBalancer") @>
                                  port: <@ additionalinput.externalAccess.service.port | default(27017) @>
                                  loadBalancerIPs: <@ additionalinput.externalAccess.service.loadBalancerIPs | default([]) @>
                                  loadBalancerSourceRanges: <@ additionalinput.externalAccess.service.loadBalancerSourceRanges | default([]) @>
                                  nodePorts: <@ additionalinput.externalAccess.service.nodePorts | default([]) @>
                                  annotations: <@ additionalinput.externalAccess.service.annotations | default({}) @>

                              arbiter:
                                enabled: <@ additionalinput.arbiter.enabled | default(false) | tojson @>
                                configuration: "<@ additionalinput.arbiter.configuration | default("") @>"
                                extraFlags: <@ additionalinput.arbiter.extraFlags | default([]) @>
                                extraEnvVars: <@ additionalinput.arbiter.extraEnvVars | default([]) @>
                                annotations: <@ additionalinput.arbiter.annotations | default({}) @>
                                labels: <@ additionalinput.arbiter.labels | default({}) @>
                                podAffinityPreset: "<@ additionalinput.arbiter.podAffinityPreset | default("") @>"
                                podAntiAffinityPreset: "<@ additionalinput.arbiter.podAntiAffinityPreset | default("soft") @>"
                                nodeAffinityPreset:
                                  type: "<@ additionalinput.arbiter.nodeAffinityPreset.type | default("") @>"
                                  key: "<@ additionalinput.arbiter.nodeAffinityPreset.key | default("") @>"
                                  values: <@ additionalinput.arbiter.nodeAffinityPreset.values | default([]) @>
                                affinity: <@ additionalinput.arbiter.affinity | default({}) @>
                                nodeSelector: <@ additionalinput.arbiter.nodeSelector | default({}) @>
                                tolerations: <@ additionalinput.arbiter.tolerations | default([]) @>
                                podLabels: <@ additionalinput.arbiter.podLabels | default({}) @>
                                podAnnotations: <@ additionalinput.arbiter.podAnnotations | default({}) @>
                                podSecurityContext:
                                  enabled: <@ additionalinput.arbiter.podSecurityContext.enabled | default(true) | tojson @>
                                  fsGroup: <@ additionalinput.arbiter.podSecurityContext.fsGroup | default(1001) @>
                                  sysctls: <@ additionalinput.arbiter.podSecurityContext.sysctls | default([]) @>
                                containerSecurityContext:
                                  enabled: <@ additionalinput.arbiter.containerSecurityContext.enabled | default(true) | tojson @>
                                  runAsUser: <@ additionalinput.arbiter.containerSecurityContext.runAsUser | default(1001) @>
                                resources:
                                  limits: <@ additionalinput.arbiter.resources.limits | default({}) @>
                                  requests: <@ additionalinput.arbiter.resources.requests | default({}) @>
                                livenessProbe:
                                  enabled: <@ additionalinput.arbiter.livenessProbe.enabled | default(true) | tojson @>
                                  initialDelaySeconds: <@ additionalinput.arbiter.livenessProbe.initialDelaySeconds | default(30) @>
                                  periodSeconds: <@ additionalinput.arbiter.livenessProbe.periodSeconds | default(10) @>
                                  timeoutSeconds: <@ additionalinput.arbiter.livenessProbe.timeoutSeconds | default(5) @>
                                  failureThreshold: <@ additionalinput.arbiter.livenessProbe.failureThreshold | default(6) @>
                                  successThreshold: <@ additionalinput.arbiter.livenessProbe.successThreshold | default(1) @>
                                readinessProbe:
                                  enabled: <@ additionalinput.arbiter.readinessProbe.enabled | default(true) | tojson @>
                                  initialDelaySeconds: <@ additionalinput.arbiter.readinessProbe.initialDelaySeconds | default(5) @>
                                  periodSeconds: <@ additionalinput.arbiter.readinessProbe.periodSeconds | default(10) @>
                                  timeoutSeconds: <@ additionalinput.arbiter.readinessProbe.timeoutSeconds | default(5) @>
                                  failureThreshold: <@ additionalinput.arbiter.readinessProbe.failureThreshold | default(6) @>
                                  successThreshold: <@ additionalinput.arbiter.readinessProbe.successThreshold | default(1) @>
                                customLivenessProbe: <@ additionalinput.arbiter.customLivenessProbe | default({}) @>
                                customReadinessProbe: <@ additionalinput.arbiter.customReadinessProbe | default({}) @>
                                initContainers: <@ additionalinput.arbiter.initContainers | default({}) @>
                                sidecars: <@ additionalinput.arbiter.sidecars | default({}) @>
                                extraVolumeMounts: <@ additionalinput.arbiter.extraVolumeMounts | default([]) @>
                                extraVolumes: <@ additionalinput.arbiter.extraVolumes | default([]) @>
                                pdb:
                                  create: <@ additionalinput.arbiter.pdb.create | default(false) | tojson @>
                                  minAvailable: <@ additionalinput.arbiter.pdb.minAvailable | default(1) @>

                              serviceAccount:
                                create: <@ additionalinput.serviceAccount.create | default(true) | tojson @>
                              rbac:
                                create: <@ additionalinput.rbac.create | default(false) | tojson @>
                              volumePermissions:
                                enabled: <@ additionalinput.volumePermissions.enabled | default(false) | tojson @>
                                image:
                                  registry: <@ additionalinput.volumePermissions.image.registry | default("docker.io") @>
                                  repository: <@ additionalinput.volumePermissions.image.repository | default("bitnami/minideb") @>
                                  tag: <@ additionalinput.volumePermissions.image.tag | default("buster") @>
                                  pullPolicy: <@ additionalinput.volumePermissions.image.pullPolicy | default("Always") @>
                                  pullSecrets: <@ additionalinput.volumePermissions.image.pullSecrets | default([]) @>
                                resources:
                                  limits: <@ additionalinput.volumePermissions.resources.limits | default({}) @>
                                  requests: <@ additionalinput.volumePermissions.resources.requests | default({}) @>
                                securityContext:
                                  runAsUser: <@ additionalinput.volumePermissions.securityContext.runAsUser | default(0) @>

                              metrics:
                                enabled: <@ additionalinput.metrics.enabled | default(false) | tojson @>
                                image:
                                  registry: <@ additionalinput.metrics.image.registry | default("docker.io") @>
                                  repository: <@ additionalinput.metrics.image.repository | default("bitnami/mongodb-exporter") @>
                                  tag: <@ additionalinput.metrics.image.tag | default("0.20.1-debian-10-r11") @>
                                  pullPolicy: <@ additionalinput.metrics.image.pullPolicy | default("IfNotPresent") @>
                                extraFlags: <@ additionalinput.metrics.extraFlags | default("") @>
                                extraUri: <@ additionalinput.metrics.extraUri | default("") @>
                                resources:
                                  limits: <@ additionalinput.metrics.resources.limits | default({}) @>
                                  requests: <@ additionalinput.metrics.resources.requests | default({}) @>
                                service:
                                  type: <@ additionalinput.metrics.service.type | default("ClusterIP") @>
                                  port: <@ additionalinput.metrics.service.port | default(9216) @>
                                livenessProbe:
                                  enabled: <@ additionalinput.metrics.livenessProbe.enabled | default(true) | tojson @>
                                  initialDelaySeconds: <@ additionalinput.metrics.livenessProbe.initialDelaySeconds | default(15) @>
                                  periodSeconds: <@ additionalinput.metrics.livenessProbe.periodSeconds | default(5) @>
                                  timeoutSeconds: <@ additionalinput.metrics.livenessProbe.timeoutSeconds | default(5) @>
                                  failureThreshold: <@ additionalinput.metrics.livenessProbe.failureThreshold | default(3) @>
                                  successThreshold: <@ additionalinput.metrics.livenessProbe.successThreshold | default(1) @>
                                readinessProbe:
                                  enabled: <@ additionalinput.metrics.readinessProbe.enabled | default(true) | tojson @>
                                  initialDelaySeconds: <@ additionalinput.metrics.readinessProbe.initialDelaySeconds | default(5) @>
                                  periodSeconds: <@ additionalinput.metrics.readinessProbe.periodSeconds | default(5) @>
                                  timeoutSeconds: <@ additionalinput.metrics.readinessProbe.timeoutSeconds | default(1) @>
                                  failureThreshold: <@ additionalinput.metrics.readinessProbe.failureThreshold | default(3) @>
                                  successThreshold: <@ additionalinput.metrics.readinessProbe.successThreshold | default(1) @>
                                serviceMonitor:
                                  enabled: <@ additionalinput.metrics.serviceMonitor.enabled | default(false) | tojson @>
                                  interval: <@ additionalinput.metrics.serviceMonitor.interval | default("30s") @>
                                  additionalLabels: <@ additionalinput.metrics.serviceMonitor.additionalLabels | default({}) @>
                                prometheusRule:
                                  enabled: <@ additionalinput.metrics.prometheusRule.enabled | default(false) | tojson @>
                                  additionalLabels: <@ additionalinput.metrics.prometheusRule.additionalLabels | default({}) @>
                                  rules: <@ additionalinput.metrics.prometheusRule.rules | default({}) @>
                             
                            output:
                              goTemplate: |
                                replicas:
                                {{- range $i := until (int .Values.replicaCount) }}
                                  - '{{ include "mongodb.fullname" $ }}-{{ $i }}.{{ include "mongodb.fullname" $ }}-headless.{{ $.Release.Namespace }}.svc:{{ $.Values.service.port }}'
                                {{- end }}
                                replicaSetName: '{{ .Values.replicaSetName }}'
                                defaultDBName: '{{ .Values.auth.database }}'
                                rootPassword: '{{ .Values.auth.rootPassword }}'
                                user:
                                  username: '{{ .Values.auth.username }}'
                                  password: '{{ .Values.auth.password }}'

              - - name: fill-input-in-module-args
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: template
                        from: "{{steps.create-helm-args.outputs.artifacts.render}}"
                      - name: input-parameters
                        from: "{{steps.fill-default-input.outputs.artifacts.render}}"
                      - name: configuration
                        raw:
                          data: |
                            prefix: input

              - - name: helm-install
                  capact-action: helm.install
                  capact-outputTypeInstances: # Defines which artifacts are output TypeInstances
                    - name: mongodb
                      from: additional
                    - name: mongo-helm-release
                      from: helm-release
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{steps.fill-input-in-module-args.outputs.artifacts.render}}"
                      - name: runner-context
                        from: "{{workflow.outputs.artifacts.runner-context}}"

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
