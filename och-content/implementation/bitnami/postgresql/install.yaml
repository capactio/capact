ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.bitnami.postgresql
  name: install
  displayName: Install PostgreSQL database
  description: Action which installs PostgreSQL database via Helm chart
  documentationURL: https://github.com/bitnami/charts
  supportURL: https://bitnami.com
  license:
    name: "Apache 2.0"
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
      url: https://capact.io

spec:
  appVersion: "10,11,12,13"

  outputTypeInstanceRelations:
    postgresql:
      uses:
        - psql-helm-release

  implements:
    - path: cap.interface.database.postgresql.install
      revision: 0.1.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0

  imports:
    - interfaceGroupPath: cap.interface.runner.helm
      alias: helm
      methods:
        - name: install
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.templating.jinja2
      alias: jinja2
      methods:
        - name: template
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: postgres-install
        templates:
          - name: postgres-install
            inputs:
              artifacts:
                - name: input-parameters # Entrypoint template gets the user parameters in 'input-parameters' artifacts.
            outputs:
              artifacts:
                - name: postgresql
                  from: "{{steps.helm-install.outputs.artifacts.additional}}"
            steps:
              - - name: create-helm-args
                  capact-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: template
                        raw:
                          data: |
                            generateName: true
                            chart:
                              name: "postgresql"
                              repo: "https://charts.bitnami.com/bitnami"
                              version: "10.4.9"
                            values:
                              volumePermissions:
                                enabled: true
                              global:
                                postgresql:
                                  postgresqlDatabase: <@ defaultDBName @>
                                  postgresqlPassword: <@ superuser.password | default(random_word(length=16)) @>
                            output:
                              goTemplate: |
                                host: '{{ template "common.names.fullname" . }}.{{ .Release.Namespace }}'
                                port: '{{ template "postgresql.port" . }}'
                                defaultDBName: '{{ template "postgresql.database" . }}'
                                superuser:
                                  # It cannot be changed
                                  username: 'postgres'
                                  password: '{{ template "postgresql.password" . }}'
                      - name: configuration
                        raw:
                          data: |

              - - name: helm-install
                  capact-action: helm.install
                  capact-outputTypeInstances: # Defines which artifacts are output TypeInstances
                    - name: postgresql
                      from: additional
                    - name: psql-helm-release
                      from: helm-release
                  arguments:

                    artifacts:
                      - name: input-parameters
                        from: "{{steps.create-helm-args.outputs.artifacts.render}}"
                      - name: runner-context
                        from: "{{workflow.outputs.artifacts.runner-context}}"

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
