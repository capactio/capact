ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.atlassian.jira # Computed during fetching the manifest
  name: install
  displayName: Install Jira
  description: Action which installs Jira via Helm chart
  documentationURL: https://github.com/javimox/helm-charts/tree/master/charts/jira-software
  supportURL: https://mox.sh/helm/
  license:
    name: "Apache 2.0"
  maintainers:
    - email: team-dev@projectvoltron.dev
      name: Voltron Dev Team
      url: https://projectvoltron.dev

spec:
  appVersion: "8.x.x"

  additionalInput:
    typeInstances:
      postgresql:
        typeRef:
          path: cap.type.database.postgresql.config
          revision: 0.1.0
        verbs: [ "get" ]

  additionalOutput:
    typeInstances:
      db:
        typeRef:
          path: cap.type.database.postgresql.database
          revision: 0.1.0
      postgresql:
        typeRef:
          path: cap.type.database.postgresql.config
          revision: 0.1.0
      helm-release:
        typeRef:
          path: cap.type.helm.chart.release
          revision: 0.1.0
    typeInstanceRelations:
      jira-config:
        uses:
          - helm-release
          - postgresql
          - db
      db:
        uses:
          - postgresql

  implements:
    - path: cap.interface.productivity.jira.install
      revision: 0.1.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0

  imports:
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.runner.helm
      alias: helm
      appVersion: 3.x.x
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.database.postgresql
      alias: postgresql
      methods:
        - name: install
          revision: 0.1.0
        - name: create-db
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        spec:
          volumes:
            - name: gcp-credentials
              secret:
                secretName: gcp-credentials
          entrypoint: jira
          templates:
            - name: jira
              steps:
                - - name: generate-artifacts
                    template: fetch-type-instances
                - - name: postgresql-install
                    template: postgresql-install
                    arguments:
                      artifacts:
                        - name: postgresql
                          from: "{{steps.generate-artifacts.outputs.artifacts.postgresql}}"
                - - name: produce-helm-values
                    template: produce-helm-values
                    arguments:
                      artifacts:
                        - name: postgresql
                          from: "{{steps.postgresql-install.outputs.artifacts.additional}}"
                - - name: jira-install
                    template: jira-install
                    arguments:
                      artifacts:
                        - name: jira-helm-input
                          from: "{{steps.generate-artifacts.outputs.artifacts.jira-helm}}"
                        - name: jira-helm-values
                          from: "{{steps.produce-helm-values.outputs.artifacts.jira-helm-values}}"
                - - name: upload-type-instances
                    template: upload-type-instances
                    arguments:
                      artifacts:
                        - name: jira-output
                          from: "{{steps.jira-install.outputs.artifacts.additional}}"

            - name: fetch-type-instances
              container:
                image: gcr.io/projectvoltron/pr/voltron-helper:PR-136
                imagePullPolicy: Always
              outputs:
                artifacts:
                  - name: postgresql
                    path: /out/postgresql-input.yaml
                  - name: jira-helm
                    path: /out/jira-cloud-input.yaml

            - name: postgresql-install
              actionFrom:
                path: "cap.interface.database.postgresql.install"
                revision: "0.1.0"
              inputs:
                artifacts:
                  - name: postgresql
                    path: /input.yaml
              outputs:
                artifacts:
                  - name: instance
                    path: /instance.yaml
                  - name: additional
                    path: /additional.yaml

            - name: produce-helm-values
              inputs:
                artifacts:
                  - name: postgresql
                    path: "/input.yaml"
              outputs:
                artifacts:
                  - name: jira-helm-values
                    globalName: jira-helm-values
                    path: "/out/jira-cloud-values.yaml"
              container:
                image: gcr.io/projectvoltron/pr/voltron-helper:PR-136
                command: [ "/produce-helm-values.sh" ]
                args:
                  - --input
                  - "postgresql={{`{{ inputs.artifacts.postgresql.path }}`}}"
                  - --input
                  - "params={{ inputParametersToArtifact.path }}"
                  - --output-path
                  - "{{`{{workflow.outputs.artifacts.postgresql}}`}}"
                  - --output-format
                  - >
                    image:
                      tag: {{ .Context.appVersion }}
                    postgresql:
                      enabled: false # do not install Postgres along the Jira installation
                    databaseConnection:
                      host: {{`{{ .postgresql.host }}`}}
                      port: {{`{{ .postgresql.port }}`}}
                      user: {{`{{ .postgresql.superuser.username }}`}}
                      password: {{`{{ .postgresql.superuser.password }}`}}
                      database: {{`{{ .postgresql.defaultDBName }}`}}
                    ingress:
                      enabled: true
                      ingress:
                        hosts:
                          - host: {{`{{ .params.host }}`}}
                            paths: []

            - name: jira-install
              container:
                image: gcr.io/projectvoltron/pr/helm-runner:PR-62
                env:
                  - name: RUNNER_INPUT_PATH
                    value: "/input.yaml"
                  - name: RUNNER_LOGGER_DEV_MODE
                    value: "true"
              inputs:
                artifacts:
                  - name: jira-helm-input
                    path: /input.yaml
                  - name: jira-helm-values
                    path: /values.yaml
              outputs:
                artifacts:
                  - name: release
                    path: /release.yaml
                  - name: additional
                    path: /additional.yaml

            - name: upload-type-instances
              container:
                image: gcr.io/projectvoltron/pr/voltron-helper:PR-136
                command: [ "/upload-type-instances.sh" ]
              inputs:
                artifacts:
                  - name: jira-output
                    path: /input.yaml

signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
