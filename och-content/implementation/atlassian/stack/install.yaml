ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.stack.install # Computed during fetching the manifest
  name: install
  displayName: Example how to install Jira and Confluence with shared database sequentially.
  description: Action which installs Jira via Helm chart
  documentationURL: https://github.com/javimox/helm-charts/tree/master/charts/jira-software
  supportURL: https://mox.sh/helm/
  license:
    name: "Apache 2.0"
  maintainers:
    - email: team-dev@projectvoltron.dev
      name: Voltron Dev Team
      url: https://projectvoltron.dev

spec:
  appVersion: "8.x.x"

  outputTypeInstanceRelations: {}

  implements:
    - path: cap.interface.atlassian.stack.install
      revision: 0.1.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0

  imports:
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.database.postgresql
      alias: postgresql
      methods:
        - name: install
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.productivity.jira
      alias: jira
      methods:
        - name: install
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.productivity.confluence
      alias: confluence
      methods:
        - name: install
          revision: 0.1.0
    - interfaceGroupPath: cap.interface.templating.jinja2
      alias: jinja2
      methods:
        - name: template
          revision: 0.1.0

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: stack-install-sequentialy
        templates:
          - name: stack-install-sequentialy
            inputs:
              artifacts:
                - name: input-parameters
            steps:
              - - name: install-shared-db
                  voltron-action: postgresql.install
                  arguments:
                    artifacts:
                      - name: input-parameters
                        raw:
                          data: |
                            superuser:
                              username: superuser
                            defaultDBName: postgres

              - - name: extract-jira-host
                  voltron-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: template
                        raw:
                          data: |
                            host: {{ jiraHost }}
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
              - - name: jira-install
                  voltron-action: jira.install
                  arguments:
                    artifacts:
                      - name: postgresql
                        from: "{{steps.install-shared-db.outputs.artifacts.postgresql}}"
                      - name: input-parameters
                        from: "{{steps.extract-jira-host.outputs.artifacts.render}}"

              - - name: extract-confluence-host
                  voltron-action: jinja2.template
                  arguments:
                    artifacts:
                      - name: template
                        raw:
                          data: |
                            host: {{ confluenceHost }}
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
              - - name: confluence-install
                  voltron-action: confluence.install
                  arguments:
                    artifacts:
                      - name: postgresql
                        from: "{{steps.install-shared-db.outputs.artifacts.postgresql}}"
                      - name: input-parameters
                        from: "{{steps.extract-confluence-host.outputs.artifacts.render}}"
signature:
  och: eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
